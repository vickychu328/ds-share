{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 2 Data wrangling<a id='2_Data_wrangling'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.1 Contents<a id='2.1_Contents'></a>\n",
    "* [2 Data wrangling](#2_Data_wrangling)\n",
    "  * [2.1 Contents](#2.1_Contents)\n",
    "  * [2.2 Introduction](#2.2_Introduction)\n",
    "    * [2.2.1 Recap Of Data Science Problem](#2.2.1_Recap_Of_Data_Science_Problem)\n",
    "    * [2.2.2 Introduction To Notebook](#2.2.2_Introduction_To_Notebook)\n",
    "  * [2.3 Imports](#2.3_Imports)\n",
    "  * [2.4 Objectives](#2.4_Objectives)\n",
    "  * [2.5 Load The Ski Resort Data](#2.5_Load_The_Ski_Resort_Data)\n",
    "  * [2.6 Explore The Data](#2.6_Explore_The_Data)\n",
    "    * [2.6.1 Find Your Resort Of Interest](#2.6.1_Find_Your_Resort_Of_Interest)\n",
    "    * [2.6.2 Number Of Missing Values By Column](#2.6.2_Number_Of_Missing_Values_By_Column)\n",
    "    * [2.6.3 Categorical Features](#2.6.3_Categorical_Features)\n",
    "      * [2.6.3.1 Unique Resort Names](#2.6.3.1_Unique_Resort_Names)\n",
    "      * [2.6.3.2 Region And State](#2.6.3.2_Region_And_State)\n",
    "      * [2.6.3.3 Number of distinct regions and states](#2.6.3.3_Number_of_distinct_regions_and_states)\n",
    "      * [2.6.3.4 Distribution Of Resorts By Region And State](#2.6.3.4_Distribution_Of_Resorts_By_Region_And_State)\n",
    "      * [2.6.3.5 Distribution Of Ticket Price By State](#2.6.3.5_Distribution_Of_Ticket_Price_By_State)\n",
    "        * [2.6.3.5.1 Average weekend and weekday price by state](#2.6.3.5.1_Average_weekend_and_weekday_price_by_state)\n",
    "        * [2.6.3.5.2 Distribution of weekday and weekend price by state](#2.6.3.5.2_Distribution_of_weekday_and_weekend_price_by_state)\n",
    "    * [2.6.4 Numeric Features](#2.6.4_Numeric_Features)\n",
    "      * [2.6.4.1 Numeric data summary](#2.6.4.1_Numeric_data_summary)\n",
    "      * [2.6.4.2 Distributions Of Feature Values](#2.6.4.2_Distributions_Of_Feature_Values)\n",
    "        * [2.6.4.2.1 SkiableTerrain_ac](#2.6.4.2.1_SkiableTerrain_ac)\n",
    "        * [2.6.4.2.2 Snow Making_ac](#2.6.4.2.2_Snow_Making_ac)\n",
    "        * [2.6.4.2.3 fastEight](#2.6.4.2.3_fastEight)\n",
    "        * [2.6.4.2.4 fastSixes and Trams](#2.6.4.2.4_fastSixes_and_Trams)\n",
    "  * [2.7 Derive State-wide Summary Statistics For Our Market Segment](#2.7_Derive_State-wide_Summary_Statistics_For_Our_Market_Segment)\n",
    "  * [2.8 Drop Rows With No Price Data](#2.8_Drop_Rows_With_No_Price_Data)\n",
    "  * [2.9 Review distributions](#2.9_Review_distributions)\n",
    "  * [2.10 Population data](#2.10_Population_data)\n",
    "  * [2.11 Target Feature](#2.11_Target_Feature)\n",
    "    * [2.11.1 Number Of Missing Values By Row - Resort](#2.11.1_Number_Of_Missing_Values_By_Row_-_Resort)\n",
    "  * [2.12 Save data](#2.12_Save_data)\n",
    "  * [2.13 Summary](#2.13_Summary)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.2 Introduction<a id='2.2_Introduction'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This step focuses on collecting your data, organizing it, and making sure it's well defined. Paying attention to these tasks will pay off greatly later on. Some data cleaning can be done at this stage, but it's important not to be overzealous in your cleaning before you've explored the data to better understand it."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2.2.1 Recap Of Data Science Problem<a id='2.2.1_Recap_Of_Data_Science_Problem'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The purpose of this data science project is to come up with a pricing model for ski resort tickets in our market segment. Big Mountain suspects it may not be maximizing its returns, relative to its position in the market. It also does not have a strong sense of what facilities matter most to visitors, particularly which ones they're most likely to pay more for. This project aims to build a predictive model for ticket price based on a number of facilities, or properties, boasted by resorts (*at the resorts).* \n",
    "This model will be used to provide guidance for Big Mountain's pricing and future facility investment plans."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2.2.2 Introduction To Notebook<a id='2.2.2_Introduction_To_Notebook'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Notebooks grow organically as we explore our data. If you used paper notebooks, you could discover a mistake and cross out or revise some earlier work. Later work may give you a reason to revisit earlier work and explore it further. The great thing about Jupyter notebooks is that you can edit, add, and move cells around without needing to cross out figures or scrawl in the margin. However, this means you can lose track of your changes easily. If you worked in a regulated environment, the company may have a a policy of always dating entries and clearly crossing out any mistakes, with your initials and the date.\n",
    "\n",
    "**Best practice here is to commit your changes using a version control system such as Git.** Try to get into the habit of adding and committing your files to the Git repository you're working in after you save them. You're are working in a Git repository, right? If you make a significant change, save the notebook and commit it to Git. In fact, if you're about to make a significant change, it's a good idea to commit before as well. Then if the change is a mess, you've got the previous version to go back to.\n",
    "\n",
    "**Another best practice with notebooks is to try to keep them organized with helpful headings and comments.** Not only can a good structure, but associated headings help you keep track of what you've done and your current focus. Anyone reading your notebook will have a much easier time following the flow of work. Remember, that 'anyone' will most likely be you. Be kind to future you!\n",
    "\n",
    "In this notebook, note how we try to use well structured, helpful headings that frequently are self-explanatory, and we make a brief note after any results to highlight key takeaways. This is an immense help to anyone reading your notebook and it will greatly help you when you come to summarise your findings. **Top tip: jot down key findings in a final summary at the end of the notebook as they arise. You can tidy this up later.** This is a great way to ensure important results don't get lost in the middle of your notebooks."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In this, and subsequent notebooks, there are coding tasks marked with `#Code task n#` with code to complete. The `___` will guide you to where you need to insert code."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.3 Imports<a id='2.3_Imports'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Placing your imports all together at the start of your notebook means you only need to consult one place to check your notebook's dependencies. By all means import something 'in situ' later on when you're experimenting, but if the imported dependency ends up being kept, you should subsequently move the import statement here with the rest."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Code task 1#\n",
    "#Import pandas, matplotlib.pyplot, and seaborn in the correct lines below\n",
    "\n",
    "\n",
    "\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import os\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.4 Objectives<a id='2.4_Objectives'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "There are some fundamental questions to resolve in this notebook before you move on.\n",
    "\n",
    "* Do you think you may have the data you need to tackle the desired question?\n",
    "    * Have you identified the required target value?\n",
    "    * Do you have potentially useful features?\n",
    "* Do you have any fundamental issues with the data?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.5 Load The Ski Resort Data<a id='2.5_Load_The_Ski_Resort_Data'></a>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "# the supplied CSV data file is the raw_data directory\n",
    "file_path = '/Users/kachu/Downloads/ski_resort_data.csv'\n",
    "ski_data = pd.read_csv(file_path)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Good first steps in auditing the data are the info method and displaying the first few records with head."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 330 entries, 0 to 329\n",
      "Data columns (total 27 columns):\n",
      " #   Column             Non-Null Count  Dtype  \n",
      "---  ------             --------------  -----  \n",
      " 0   Name               330 non-null    object \n",
      " 1   Region             330 non-null    object \n",
      " 2   state              330 non-null    object \n",
      " 3   summit_elev        330 non-null    int64  \n",
      " 4   vertical_drop      330 non-null    int64  \n",
      " 5   base_elev          330 non-null    int64  \n",
      " 6   trams              330 non-null    int64  \n",
      " 7   fastEight          164 non-null    float64\n",
      " 8   fastSixes          330 non-null    int64  \n",
      " 9   fastQuads          330 non-null    int64  \n",
      " 10  quad               330 non-null    int64  \n",
      " 11  triple             330 non-null    int64  \n",
      " 12  double             330 non-null    int64  \n",
      " 13  surface            330 non-null    int64  \n",
      " 14  total_chairs       330 non-null    int64  \n",
      " 15  Runs               326 non-null    float64\n",
      " 16  TerrainParks       279 non-null    float64\n",
      " 17  LongestRun_mi      325 non-null    float64\n",
      " 18  SkiableTerrain_ac  327 non-null    float64\n",
      " 19  Snow Making_ac     284 non-null    float64\n",
      " 20  daysOpenLastYear   279 non-null    float64\n",
      " 21  yearsOpen          329 non-null    float64\n",
      " 22  averageSnowfall    316 non-null    float64\n",
      " 23  AdultWeekday       276 non-null    float64\n",
      " 24  AdultWeekend       279 non-null    float64\n",
      " 25  projectedDaysOpen  283 non-null    float64\n",
      " 26  NightSkiing_ac     187 non-null    float64\n",
      "dtypes: float64(13), int64(11), object(3)\n",
      "memory usage: 69.7+ KB\n"
     ]
    }
   ],
   "source": [
    "#Code task 2#\n",
    "#Call the info method on ski_data to see a summary of the data\n",
    "ski_data.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "`AdultWeekday` is the price of an adult weekday ticket. `AdultWeekend` is the price of an adult weekend ticket. The other columns are potential features."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This immediately raises the question of what quantity will you want to model? You know you want to model the ticket price, but you realise there are two kinds of ticket price!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Name</th>\n",
       "      <th>Region</th>\n",
       "      <th>state</th>\n",
       "      <th>summit_elev</th>\n",
       "      <th>vertical_drop</th>\n",
       "      <th>base_elev</th>\n",
       "      <th>trams</th>\n",
       "      <th>fastEight</th>\n",
       "      <th>fastSixes</th>\n",
       "      <th>fastQuads</th>\n",
       "      <th>...</th>\n",
       "      <th>LongestRun_mi</th>\n",
       "      <th>SkiableTerrain_ac</th>\n",
       "      <th>Snow Making_ac</th>\n",
       "      <th>daysOpenLastYear</th>\n",
       "      <th>yearsOpen</th>\n",
       "      <th>averageSnowfall</th>\n",
       "      <th>AdultWeekday</th>\n",
       "      <th>AdultWeekend</th>\n",
       "      <th>projectedDaysOpen</th>\n",
       "      <th>NightSkiing_ac</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Alyeska Resort</td>\n",
       "      <td>Alaska</td>\n",
       "      <td>Alaska</td>\n",
       "      <td>3939</td>\n",
       "      <td>2500</td>\n",
       "      <td>250</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1610.0</td>\n",
       "      <td>113.0</td>\n",
       "      <td>150.0</td>\n",
       "      <td>60.0</td>\n",
       "      <td>669.0</td>\n",
       "      <td>65.0</td>\n",
       "      <td>85.0</td>\n",
       "      <td>150.0</td>\n",
       "      <td>550.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Eaglecrest Ski Area</td>\n",
       "      <td>Alaska</td>\n",
       "      <td>Alaska</td>\n",
       "      <td>2600</td>\n",
       "      <td>1540</td>\n",
       "      <td>1200</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.0</td>\n",
       "      <td>640.0</td>\n",
       "      <td>60.0</td>\n",
       "      <td>45.0</td>\n",
       "      <td>44.0</td>\n",
       "      <td>350.0</td>\n",
       "      <td>47.0</td>\n",
       "      <td>53.0</td>\n",
       "      <td>90.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Hilltop Ski Area</td>\n",
       "      <td>Alaska</td>\n",
       "      <td>Alaska</td>\n",
       "      <td>2090</td>\n",
       "      <td>294</td>\n",
       "      <td>1796</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>150.0</td>\n",
       "      <td>36.0</td>\n",
       "      <td>69.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>34.0</td>\n",
       "      <td>152.0</td>\n",
       "      <td>30.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Arizona Snowbowl</td>\n",
       "      <td>Arizona</td>\n",
       "      <td>Arizona</td>\n",
       "      <td>11500</td>\n",
       "      <td>2300</td>\n",
       "      <td>9200</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.0</td>\n",
       "      <td>777.0</td>\n",
       "      <td>104.0</td>\n",
       "      <td>122.0</td>\n",
       "      <td>81.0</td>\n",
       "      <td>260.0</td>\n",
       "      <td>89.0</td>\n",
       "      <td>89.0</td>\n",
       "      <td>122.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Sunrise Park Resort</td>\n",
       "      <td>Arizona</td>\n",
       "      <td>Arizona</td>\n",
       "      <td>11100</td>\n",
       "      <td>1800</td>\n",
       "      <td>9200</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1.2</td>\n",
       "      <td>800.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>115.0</td>\n",
       "      <td>49.0</td>\n",
       "      <td>250.0</td>\n",
       "      <td>74.0</td>\n",
       "      <td>78.0</td>\n",
       "      <td>104.0</td>\n",
       "      <td>80.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 27 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Name   Region    state  summit_elev  vertical_drop  \\\n",
       "0       Alyeska Resort   Alaska   Alaska         3939           2500   \n",
       "1  Eaglecrest Ski Area   Alaska   Alaska         2600           1540   \n",
       "2     Hilltop Ski Area   Alaska   Alaska         2090            294   \n",
       "3     Arizona Snowbowl  Arizona  Arizona        11500           2300   \n",
       "4  Sunrise Park Resort  Arizona  Arizona        11100           1800   \n",
       "\n",
       "   base_elev  trams  fastEight  fastSixes  fastQuads  ...  LongestRun_mi  \\\n",
       "0        250      1        0.0          0          2  ...            1.0   \n",
       "1       1200      0        0.0          0          0  ...            2.0   \n",
       "2       1796      0        0.0          0          0  ...            1.0   \n",
       "3       9200      0        0.0          1          0  ...            2.0   \n",
       "4       9200      0        NaN          0          1  ...            1.2   \n",
       "\n",
       "   SkiableTerrain_ac  Snow Making_ac  daysOpenLastYear  yearsOpen  \\\n",
       "0             1610.0           113.0             150.0       60.0   \n",
       "1              640.0            60.0              45.0       44.0   \n",
       "2               30.0            30.0             150.0       36.0   \n",
       "3              777.0           104.0             122.0       81.0   \n",
       "4              800.0            80.0             115.0       49.0   \n",
       "\n",
       "   averageSnowfall  AdultWeekday  AdultWeekend  projectedDaysOpen  \\\n",
       "0            669.0          65.0          85.0              150.0   \n",
       "1            350.0          47.0          53.0               90.0   \n",
       "2             69.0          30.0          34.0              152.0   \n",
       "3            260.0          89.0          89.0              122.0   \n",
       "4            250.0          74.0          78.0              104.0   \n",
       "\n",
       "   NightSkiing_ac  \n",
       "0           550.0  \n",
       "1             NaN  \n",
       "2            30.0  \n",
       "3             NaN  \n",
       "4            80.0  \n",
       "\n",
       "[5 rows x 27 columns]"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Code task 3#\n",
    "#Call the head method on ski_data to print the first several rows of the data\n",
    "ski_data.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The output above suggests you've made a good start getting the ski resort data organized. You have plausible column headings. You can already see you have a missing value in the `fastEight` column"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.6 Explore The Data<a id='2.6_Explore_The_Data'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2.6.1 Find Your Resort Of Interest<a id='2.6.1_Find_Your_Resort_Of_Interest'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Your resort of interest is called Big Mountain Resort. Check it's in the data:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>151</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Name</th>\n",
       "      <td>Big Mountain Resort</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Region</th>\n",
       "      <td>Montana</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>state</th>\n",
       "      <td>Montana</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>summit_elev</th>\n",
       "      <td>6817</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>vertical_drop</th>\n",
       "      <td>2353</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>base_elev</th>\n",
       "      <td>4464</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>trams</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fastEight</th>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fastSixes</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fastQuads</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>quad</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>triple</th>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>double</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>surface</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total_chairs</th>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Runs</th>\n",
       "      <td>105.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>TerrainParks</th>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>LongestRun_mi</th>\n",
       "      <td>3.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SkiableTerrain_ac</th>\n",
       "      <td>3000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Snow Making_ac</th>\n",
       "      <td>600.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>daysOpenLastYear</th>\n",
       "      <td>123.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>yearsOpen</th>\n",
       "      <td>72.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>averageSnowfall</th>\n",
       "      <td>333.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AdultWeekday</th>\n",
       "      <td>81.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AdultWeekend</th>\n",
       "      <td>81.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>projectedDaysOpen</th>\n",
       "      <td>123.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NightSkiing_ac</th>\n",
       "      <td>600.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                   151\n",
       "Name               Big Mountain Resort\n",
       "Region                         Montana\n",
       "state                          Montana\n",
       "summit_elev                       6817\n",
       "vertical_drop                     2353\n",
       "base_elev                         4464\n",
       "trams                                0\n",
       "fastEight                          0.0\n",
       "fastSixes                            0\n",
       "fastQuads                            3\n",
       "quad                                 2\n",
       "triple                               6\n",
       "double                               0\n",
       "surface                              3\n",
       "total_chairs                        14\n",
       "Runs                             105.0\n",
       "TerrainParks                       4.0\n",
       "LongestRun_mi                      3.3\n",
       "SkiableTerrain_ac               3000.0\n",
       "Snow Making_ac                   600.0\n",
       "daysOpenLastYear                 123.0\n",
       "yearsOpen                         72.0\n",
       "averageSnowfall                  333.0\n",
       "AdultWeekday                      81.0\n",
       "AdultWeekend                      81.0\n",
       "projectedDaysOpen                123.0\n",
       "NightSkiing_ac                   600.0"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Code task 4#\n",
    "#Filter the ski_data dataframe to display just the row for our resort with the name 'Big Mountain Resort'\n",
    "#Hint: you will find that the transpose of the row will give a nicer output. DataFrame's do have a\n",
    "#transpose method, but you can access this conveniently with the `T` property.\n",
    "ski_data[ski_data.Name == 'Big Mountain Resort'].T"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It's good that your resort doesn't appear to have any missing values."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2.6.2 Number Of Missing Values By Column<a id='2.6.2_Number_Of_Missing_Values_By_Column'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Count the number of missing values in each column and sort them."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   count          %\n",
      "fastEight            166  50.303030\n",
      "NightSkiing_ac       143  43.333333\n",
      "AdultWeekday          54  16.363636\n",
      "AdultWeekend          51  15.454545\n",
      "daysOpenLastYear      51  15.454545\n",
      "TerrainParks          51  15.454545\n",
      "projectedDaysOpen     47  14.242424\n",
      "Snow Making_ac        46  13.939394\n",
      "averageSnowfall       14   4.242424\n",
      "LongestRun_mi          5   1.515152\n",
      "Runs                   4   1.212121\n",
      "SkiableTerrain_ac      3   0.909091\n",
      "yearsOpen              1   0.303030\n",
      "total_chairs           0   0.000000\n",
      "Name                   0   0.000000\n",
      "Region                 0   0.000000\n",
      "double                 0   0.000000\n",
      "triple                 0   0.000000\n",
      "quad                   0   0.000000\n",
      "fastQuads              0   0.000000\n",
      "fastSixes              0   0.000000\n",
      "trams                  0   0.000000\n",
      "base_elev              0   0.000000\n",
      "vertical_drop          0   0.000000\n",
      "summit_elev            0   0.000000\n",
      "state                  0   0.000000\n",
      "surface                0   0.000000\n"
     ]
    }
   ],
   "source": [
    "#Code task 5#\n",
    "#Count (using `.sum()`) the number of missing values (`.isnull()`) in each column of \n",
    "#ski_data as well as the percentages (using `.mean()` instead of `.sum()`).\n",
    "#Order them (increasing or decreasing) using sort_values\n",
    "#Call `pd.concat` to present these in a single table (DataFrame) with the helpful column names 'count' and '%'\n",
    "missing = pd.concat([ski_data.isnull().sum(), 100 * ski_data.isnull().mean()], axis=1)\n",
    "missing.columns=['count', '%']\n",
    "missing_sorted = missing.sort_values(by='count', ascending=False)\n",
    "print(missing_sorted)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "`fastEight` has the most missing values, at just over 50%. Unfortunately, you see you're also missing quite a few of your desired target quantity, the ticket price, which is missing 15-16% of values. `AdultWeekday` is missing in a few more records than `AdultWeekend`. What overlap is there in these missing values? This is a question you'll want to investigate. You should also point out that `isnull()` is not the only indicator of missing data. Sometimes 'missingness' can be encoded, perhaps by a -1 or 999. Such values are typically chosen because they are \"obviously\" not genuine values. If you were capturing data on people's heights and weights but missing someone's height, you could certainly encode that as a 0 because no one has a height of zero (in any units). Yet such entries would not be revealed by `isnull()`. Here, you need a data dictionary and/or to spot such values as part of looking for outliers. Someone with a height of zero should definitely show up as an outlier!"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2.6.3 Categorical Features<a id='2.6.3_Categorical_Features'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "So far you've examined only the numeric features. Now you inspect categorical ones such as resort name and state. These are discrete entities. 'Alaska' is a name. Although names can be sorted alphabetically, it makes no sense to take the average of 'Alaska' and 'Arizona'. Similarly, 'Alaska' is before 'Arizona' only lexicographically; it is neither 'less than' nor 'greater than' 'Arizona'. As such, they tend to require different handling than strictly numeric quantities. Note, a feature _can_ be numeric but also categorical. For example, instead of giving the number of `fastEight` lifts, a feature might be `has_fastEights` and have the value 0 or 1 to denote absence or presence of such a lift. In such a case it would not make sense to take an average of this or perform other mathematical calculations on it. Although you digress a little to make a point, month numbers are also, strictly speaking, categorical features. Yes, when a month is represented by its number (1 for January, 2 for Februrary etc.) it provides a convenient way to graph trends over a year. And, arguably, there is some logical interpretation of the average of 1 and 3 (January and March) being 2 (February). However, clearly December of one years precedes January of the next and yet 12 as a number is not less than 1. The numeric quantities in the section above are truly numeric; they are the number of feet in the drop, or acres or years open or the amount of snowfall etc."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Name</th>\n",
       "      <th>Region</th>\n",
       "      <th>state</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Alyeska Resort</td>\n",
       "      <td>Alaska</td>\n",
       "      <td>Alaska</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Eaglecrest Ski Area</td>\n",
       "      <td>Alaska</td>\n",
       "      <td>Alaska</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Hilltop Ski Area</td>\n",
       "      <td>Alaska</td>\n",
       "      <td>Alaska</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Arizona Snowbowl</td>\n",
       "      <td>Arizona</td>\n",
       "      <td>Arizona</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Sunrise Park Resort</td>\n",
       "      <td>Arizona</td>\n",
       "      <td>Arizona</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>325</th>\n",
       "      <td>Meadowlark Ski Lodge</td>\n",
       "      <td>Wyoming</td>\n",
       "      <td>Wyoming</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>326</th>\n",
       "      <td>Sleeping Giant Ski Resort</td>\n",
       "      <td>Wyoming</td>\n",
       "      <td>Wyoming</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>327</th>\n",
       "      <td>Snow King Resort</td>\n",
       "      <td>Wyoming</td>\n",
       "      <td>Wyoming</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>328</th>\n",
       "      <td>Snowy Range Ski &amp; Recreation Area</td>\n",
       "      <td>Wyoming</td>\n",
       "      <td>Wyoming</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>329</th>\n",
       "      <td>White Pine Ski Area</td>\n",
       "      <td>Wyoming</td>\n",
       "      <td>Wyoming</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>330 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                  Name   Region    state\n",
       "0                       Alyeska Resort   Alaska   Alaska\n",
       "1                  Eaglecrest Ski Area   Alaska   Alaska\n",
       "2                     Hilltop Ski Area   Alaska   Alaska\n",
       "3                     Arizona Snowbowl  Arizona  Arizona\n",
       "4                  Sunrise Park Resort  Arizona  Arizona\n",
       "..                                 ...      ...      ...\n",
       "325               Meadowlark Ski Lodge  Wyoming  Wyoming\n",
       "326          Sleeping Giant Ski Resort  Wyoming  Wyoming\n",
       "327                   Snow King Resort  Wyoming  Wyoming\n",
       "328  Snowy Range Ski & Recreation Area  Wyoming  Wyoming\n",
       "329                White Pine Ski Area  Wyoming  Wyoming\n",
       "\n",
       "[330 rows x 3 columns]"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Code task 6#\n",
    "#Use ski_data's `select_dtypes` method to select columns of dtype 'object'\n",
    "ski_data.select_dtypes(include='object')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "You saw earlier on that these three columns had no missing values. But are there any other issues with these columns? Sensible questions to ask here include:\n",
    "\n",
    "* Is `Name` (or at least a combination of Name/Region/State) unique?\n",
    "* Is `Region` always the same as `state`?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 2.6.3.1 Unique Resort Names<a id='2.6.3.1_Unique_Resort_Names'></a>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Crystal Mountain    2\n",
       "Alyeska Resort      1\n",
       "Brandywine          1\n",
       "Boston Mills        1\n",
       "Alpine Valley       1\n",
       "Name: Name, dtype: int64"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Code task 7#\n",
    "#Use pandas' Series method `value_counts` to find any duplicated resort names\n",
    "ski_data['Name'].value_counts().head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "You have a duplicated resort name: Crystal Mountain."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Q: 1** Is this resort duplicated if you take into account Region and/or state as well?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Alyeska Resort, Alaska    1\n",
       "Snow Trails, Ohio         1\n",
       "Brandywine, Ohio          1\n",
       "Boston Mills, Ohio        1\n",
       "Alpine Valley, Ohio       1\n",
       "dtype: int64"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Code task 8#\n",
    "#Concatenate the string columns 'Name' and 'Region' and count the values again (as above)\n",
    "(ski_data['Name'] + ', ' + ski_data['Region']).value_counts().head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Alyeska Resort, Alaska    1\n",
       "Snow Trails, Ohio         1\n",
       "Brandywine, Ohio          1\n",
       "Boston Mills, Ohio        1\n",
       "Alpine Valley, Ohio       1\n",
       "dtype: int64"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Code task 9#\n",
    "#Concatenate 'Name' and 'state' and count the values again (as above)\n",
    "(ski_data['Name'] + ', ' + ski_data['state']).value_counts().head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "**NB** because you know `value_counts()` sorts descending, you can use the `head()` method and know the rest of the counts must be 1."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**A: 1** Your answer here"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Name</th>\n",
       "      <th>Region</th>\n",
       "      <th>state</th>\n",
       "      <th>summit_elev</th>\n",
       "      <th>vertical_drop</th>\n",
       "      <th>base_elev</th>\n",
       "      <th>trams</th>\n",
       "      <th>fastEight</th>\n",
       "      <th>fastSixes</th>\n",
       "      <th>fastQuads</th>\n",
       "      <th>...</th>\n",
       "      <th>LongestRun_mi</th>\n",
       "      <th>SkiableTerrain_ac</th>\n",
       "      <th>Snow Making_ac</th>\n",
       "      <th>daysOpenLastYear</th>\n",
       "      <th>yearsOpen</th>\n",
       "      <th>averageSnowfall</th>\n",
       "      <th>AdultWeekday</th>\n",
       "      <th>AdultWeekend</th>\n",
       "      <th>projectedDaysOpen</th>\n",
       "      <th>NightSkiing_ac</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>104</th>\n",
       "      <td>Crystal Mountain</td>\n",
       "      <td>Michigan</td>\n",
       "      <td>Michigan</td>\n",
       "      <td>1132</td>\n",
       "      <td>375</td>\n",
       "      <td>757</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0.3</td>\n",
       "      <td>102.0</td>\n",
       "      <td>96.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>63.0</td>\n",
       "      <td>132.0</td>\n",
       "      <td>54.0</td>\n",
       "      <td>64.0</td>\n",
       "      <td>135.0</td>\n",
       "      <td>56.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>295</th>\n",
       "      <td>Crystal Mountain</td>\n",
       "      <td>Washington</td>\n",
       "      <td>Washington</td>\n",
       "      <td>7012</td>\n",
       "      <td>3100</td>\n",
       "      <td>4400</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>2.5</td>\n",
       "      <td>2600.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>57.0</td>\n",
       "      <td>486.0</td>\n",
       "      <td>99.0</td>\n",
       "      <td>99.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2 rows × 27 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                 Name      Region       state  summit_elev  vertical_drop  \\\n",
       "104  Crystal Mountain    Michigan    Michigan         1132            375   \n",
       "295  Crystal Mountain  Washington  Washington         7012           3100   \n",
       "\n",
       "     base_elev  trams  fastEight  fastSixes  fastQuads  ...  LongestRun_mi  \\\n",
       "104        757      0        0.0          0          1  ...            0.3   \n",
       "295       4400      1        NaN          2          2  ...            2.5   \n",
       "\n",
       "     SkiableTerrain_ac  Snow Making_ac  daysOpenLastYear  yearsOpen  \\\n",
       "104              102.0            96.0             120.0       63.0   \n",
       "295             2600.0            10.0               NaN       57.0   \n",
       "\n",
       "     averageSnowfall  AdultWeekday  AdultWeekend  projectedDaysOpen  \\\n",
       "104            132.0          54.0          64.0              135.0   \n",
       "295            486.0          99.0          99.0                NaN   \n",
       "\n",
       "     NightSkiing_ac  \n",
       "104            56.0  \n",
       "295             NaN  \n",
       "\n",
       "[2 rows x 27 columns]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ski_data[ski_data['Name'] == 'Crystal Mountain']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "So there are two Crystal Mountain resorts, but they are clearly two different resorts in two different states. This is a powerful signal that you have unique records on each row."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 2.6.3.2 Region And State<a id='2.6.3.2_Region_And_State'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "What's the relationship between region and state?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "You know they are the same in many cases (e.g. both the Region and the state are given as 'Michigan'). In how many cases do they differ?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "33\n"
     ]
    }
   ],
   "source": [
    "#Code task 10#\n",
    "#Calculate the number of times Region does not equal state\n",
    "differences = (ski_data['Region'] != ski_data['state']).sum()\n",
    "print(differences)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "You know what a state is. What is a region? You can tabulate the distinct values along with their respective frequencies using `value_counts()`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "New York          33\n",
       "Michigan          29\n",
       "Colorado          22\n",
       "California        21\n",
       "Pennsylvania      19\n",
       "New Hampshire     16\n",
       "Wisconsin         16\n",
       "Vermont           15\n",
       "Minnesota         14\n",
       "Utah              13\n",
       "Idaho             12\n",
       "Montana           12\n",
       "Massachusetts     11\n",
       "Washington        10\n",
       "Oregon            10\n",
       "New Mexico         9\n",
       "Maine              9\n",
       "Wyoming            8\n",
       "North Carolina     6\n",
       "Ohio               5\n",
       "Connecticut        5\n",
       "Nevada             4\n",
       "West Virginia      4\n",
       "Illinois           4\n",
       "Virginia           4\n",
       "Alaska             3\n",
       "Iowa               3\n",
       "Indiana            2\n",
       "New Jersey         2\n",
       "Arizona            2\n",
       "Missouri           2\n",
       "South Dakota       2\n",
       "Tennessee          1\n",
       "Rhode Island       1\n",
       "Maryland           1\n",
       "Name: state, dtype: int64"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ski_data['state'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "A casual inspection by eye reveals some non-state names such as Sierra Nevada, Salt Lake City, and Northern California. Tabulate the differences between Region and state. On a note regarding scaling to larger data sets, you might wonder how you could spot such cases when presented with millions of rows. This is an interesting point. Imagine you have access to a database with a Region and state column in a table and there are millions of rows. You wouldn't eyeball all the rows looking for differences! Bear in mind that our first interest lies in establishing the answer to the question \"Are they always the same?\" One approach might be to ask the database to return records where they differ, but limit the output to 10 rows. If there were differences, you'd only get up to 10 results, and so you wouldn't know whether you'd located all differences, but you'd know that there were 'a nonzero number' of differences. If you got an empty result set back, then you would know that the two columns always had the same value. At the risk of digressing, some values in one column only might be NULL (missing) and different databases treat NULL differently, so be aware that on many an occasion a seamingly 'simple' question gets very interesting to answer very quickly!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "state       Region             \n",
       "California  Sierra Nevada          20\n",
       "            Northern California     1\n",
       "Nevada      Sierra Nevada           2\n",
       "Oregon      Mt. Hood                4\n",
       "Utah        Salt Lake City          6\n",
       "Name: Region, dtype: int64"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Code task 11#\n",
    "#Filter the ski_data dataframe for rows where 'Region' and 'state' are different,\n",
    "#group that by 'state' and perform `value_counts` on the 'Region'\n",
    "(ski_data[ski_data.Region != ski_data.state]\n",
    " .groupby('state')['Region'].value_counts())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The vast majority of the differences are in California, with most Regions being called Sierra Nevada and just one referred to as Northern California."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 2.6.3.3 Number of distinct regions and states<a id='2.6.3.3_Number_of_distinct_regions_and_states'></a>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<bound method DataFrame.nunique of       Region    state\n",
       "0     Alaska   Alaska\n",
       "1     Alaska   Alaska\n",
       "2     Alaska   Alaska\n",
       "3    Arizona  Arizona\n",
       "4    Arizona  Arizona\n",
       "..       ...      ...\n",
       "325  Wyoming  Wyoming\n",
       "326  Wyoming  Wyoming\n",
       "327  Wyoming  Wyoming\n",
       "328  Wyoming  Wyoming\n",
       "329  Wyoming  Wyoming\n",
       "\n",
       "[330 rows x 2 columns]>"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Code task 12#\n",
    "#Select the 'Region' and 'state' columns from ski_data and use the `nunique` method to calculate\n",
    "#the number of unique values in each\n",
    "ski_data[['Region','state']].nunique"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Because a few states are split across multiple named regions, there are slightly more unique regions than states."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 2.6.3.4 Distribution Of Resorts By Region And State<a id='2.6.3.4_Distribution_Of_Resorts_By_Region_And_State'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "If this is your first time using [matplotlib](https://matplotlib.org/3.2.2/index.html)'s [subplots](https://matplotlib.org/3.2.2/api/_as_gen/matplotlib.pyplot.subplots.html), you may find the online documentation useful."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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OnfuzJo1a/jxxx85ffo0Y8aM0bgRlhR/165dad++PX369OHAgQOkpKQQFxfH+++/r3TeWFtbc+3aNRITE/njjz+UOaTW1tYcOnSImzdvcufOHR48eMCECROIjY3l+vXrHD9+nPj4eBwdHZ/pv5cQQgghRHXStGlTatasycmTJ5WyO3fucPnyZeXzzz//rLxo69SpE82aNXumKdQFHB0dC738i4uLk+c1IYQopUo3QgQodrSBlpYW27dvJzAwECcnJxwcHFi1apUyBBHAwMCAxYsXc+XKFbS1tXn11VfZt28fWlpamJiYsGjRIqZMmcKjR49o2bIl//nPfzAzMwPyl6197733WLVqFa6urixbtow333xTadvMzIzDhw8THByMp6cn2trauLi4FBrKWJLw8HBGjBiBh4cHDRs25KOPPiIhIaFU8QPs27ePWbNmERAQwO+//465uTkeHh40aNAAyE86u2vXLry9vbl79y4RERH4+/sTHh7OlClT2LhxI6+88gqXL1/m9u3bDBs2jP/973/UrVsXPz8/SZoqhBBCCFECAwMDRo4cSXBwMGZmZjRo0IBZs2Ypz2qAxou2MWPGcP78+UIv2kojODiY/v37K6sK/uc//2HXrl189913z9yWjOgVQlRHKnVpxvUJ8RwyMjIwNjYmPT1dbrBCiCpBfteEEMXx9/fn7t27REdHc+/ePcaOHcuuXbswNDRk6tSpfPPNN7i4uLBy5UoAtm3bxnvvvUdaWhqurq6EhITw5ptvcubMGVxcXIiNjcXb25s7d+5gYmIC5Cfwb926NdeuXVOmR69bt45ly5Zx48YNbGxseP/99xk6dGip45bfNSFEVfMsv2vSISJeGLnBCiGqGvldE0JUNfK7JoSoap7ld63S5RARQgghhBBCCCGE+KekQ0QIIYQQQgghhBDVTqVMqlpR+fv7ExUVxejRo1m/fr3GvnHjxrFu3TqGDx9OZGRkmZxv3rx5REdHk5iYWCbtvShOcw+gpaNX3mGIp0hZ5FveIQghhBBCCCHESyMjRMqYpaUl27dv58GDB0rZw4cP2bZtG1ZWVuUYmRBCCCGEEEIIIQpIh0gZc3V1xcrKil27dillu3btwtLSktatWytlWVlZBAYGUr9+fWrXrk3Hjh2Jj49X9sfGxqJSqTh06BBubm7o6enRoUMHLl26BOQvARwaGspP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",
      "text/plain": [
       "<Figure size 1200x700 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Code task 13#\n",
    "#Create two subplots on 1 row and 2 columns with a figsize of (12, 8)\n",
    "fig, ax = plt.subplots(1, 2, figsize=(12,7))\n",
    "#Specify a horizontal barplot ('barh') as kind of plot (kind=)\n",
    "ski_data.Region.value_counts().plot(kind='barh', ax=ax[0])\n",
    "#Give the plot a helpful title of 'Region'\n",
    "ax[0].set_title('Region')\n",
    "#Label the xaxis 'Count'\n",
    "ax[0].set_xlabel('Count')\n",
    "#Specify a horizontal barplot ('barh') as kind of plot (kind=)\n",
    "ski_data.state.value_counts().plot(kind='barh', ax=ax[1])\n",
    "#Give the plot a helpful title of 'state'\n",
    "ax[1].set_title('state')\n",
    "#Label the xaxis 'Count'\n",
    "ax[1].set_xlabel('Count')\n",
    "#Give the subplots a little \"breathing room\" with a wspace of 0.5\n",
    "plt.subplots_adjust(wspace=1);\n",
    "#You're encouraged to explore a few different figure sizes, orientations, and spacing here\n",
    "# as the importance of easy-to-read and informative figures is frequently understated\n",
    "# and you will find the ability to tweak figures invaluable later on"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "How's your geography? Looking at the distribution of States, you see New York accounting for the majority of resorts. Our target resort is in Montana, which comes in at 13th place. You should think carefully about how, or whether, you use this information. Does New York command a premium because of its proximity to population? Even if a resort's State were a useful predictor of ticket price, your main interest lies in Montana. Would you want a model that is skewed for accuracy by New York? Should you just filter for Montana and create a Montana-specific model? This would slash your available data volume. Your problem task includes the contextual insight that the data are for resorts all belonging to the same market share. This suggests one might expect prices to be similar amongst them. You can look into this. A boxplot grouped by State is an ideal way to quickly compare prices. Another side note worth bringing up here is that, in reality, the best approach here definitely would include consulting with the client or other domain expert. They might know of good reasons for treating states equivalently or differently. The data scientist is rarely the final arbiter of such a decision. But here, you'll see if we can find any supporting evidence for treating states the same or differently."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 2.6.3.5 Distribution Of Ticket Price By State<a id='2.6.3.5_Distribution_Of_Ticket_Price_By_State'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Our primary focus is our Big Mountain resort, in Montana. Does the state give you any clues to help decide what your primary target response feature should be (weekend or weekday ticket prices)?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### 2.6.3.5.1 Average weekend and weekday price by state<a id='2.6.3.5.1_Average_weekend_and_weekday_price_by_state'></a>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>AdultWeekday</th>\n",
       "      <th>AdultWeekend</th>\n",
       "      <th>Average Price</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>state</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Utah</th>\n",
       "      <td>89.083333</td>\n",
       "      <td>93.000000</td>\n",
       "      <td>91.041667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Colorado</th>\n",
       "      <td>90.714286</td>\n",
       "      <td>90.714286</td>\n",
       "      <td>90.714286</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Vermont</th>\n",
       "      <td>83.500000</td>\n",
       "      <td>87.900000</td>\n",
       "      <td>85.700000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Arizona</th>\n",
       "      <td>81.500000</td>\n",
       "      <td>83.500000</td>\n",
       "      <td>82.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>New Jersey</th>\n",
       "      <td>79.990000</td>\n",
       "      <td>79.990000</td>\n",
       "      <td>79.990000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            AdultWeekday  AdultWeekend  Average Price\n",
       "state                                                \n",
       "Utah           89.083333     93.000000      91.041667\n",
       "Colorado       90.714286     90.714286      90.714286\n",
       "Vermont        83.500000     87.900000      85.700000\n",
       "Arizona        81.500000     83.500000      82.500000\n",
       "New Jersey     79.990000     79.990000      79.990000"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Code task 14#\n",
    "# Calculate average weekday and weekend price by state and sort by the average of the two\n",
    "# Hint: use the pattern dataframe.groupby(<grouping variable>)[<list of columns>].mean()\n",
    "state_price_means = ski_data.groupby('state')[['AdultWeekday', 'AdultWeekend']].mean()\n",
    "state_price_means['Average Price'] = (state_price_means['AdultWeekday'] + state_price_means['AdultWeekend']) / 2\n",
    "state_price_means_sorted = state_price_means.sort_values(by='Average Price', ascending=False)\n",
    "state_price_means_sorted.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x1000 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# The next bit simply reorders the index by increasing average of weekday and weekend prices\n",
    "# Compare the index order you get from\n",
    "# state_price_means.index\n",
    "# with\n",
    "# state_price_means.mean(axis=1).sort_values(ascending=False).index\n",
    "# See how this expression simply sits within the reindex()\n",
    "(state_price_means.reindex(index=state_price_means.mean(axis=1)\n",
    "    .sort_values(ascending=False)\n",
    "    .index)\n",
    "    .plot(kind='barh', figsize=(10, 10), title='Average ticket price by State'))\n",
    "plt.xlabel('Price ($)');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "The figure above represents a dataframe with two columns, one for the average prices of each kind of ticket. This tells you how the average ticket price varies from state to state. But can you get more insight into the difference in the distributions between states?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### 2.6.3.5.2 Distribution of weekday and weekend price by state<a id='2.6.3.5.2_Distribution_of_weekday_and_weekend_price_by_state'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Next, you can transform the data into a single column for price with a new categorical column that represents the ticket type."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Code task 15#\n",
    "#Use the pd.melt function, pass in the ski_data columns 'state', 'AdultWeekday', and 'Adultweekend' only,\n",
    "#specify 'state' for `id_vars`\n",
    "#gather the ticket prices from the 'Adultweekday' and 'AdultWeekend' columns using the `value_vars` argument,\n",
    "#call the resultant price column 'Price' via the `value_name` argument,\n",
    "#name the weekday/weekend indicator column 'Ticket' via the `var_name` argument\n",
    "ticket_prices = pd.melt(ski_data[['state', 'AdultWeekday', 'AdultWeekend']], \n",
    "                        id_vars='state', \n",
    "                        var_name='Ticket', \n",
    "                        value_vars=['AdultWeekday', 'AdultWeekend'],\n",
    "                        value_name='Price')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>state</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Alaska</td>\n",
       "      <td>AdultWeekday</td>\n",
       "      <td>65.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Alaska</td>\n",
       "      <td>AdultWeekday</td>\n",
       "      <td>47.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Alaska</td>\n",
       "      <td>AdultWeekday</td>\n",
       "      <td>30.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Arizona</td>\n",
       "      <td>AdultWeekday</td>\n",
       "      <td>89.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Arizona</td>\n",
       "      <td>AdultWeekday</td>\n",
       "      <td>74.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     state        Ticket  Price\n",
       "0   Alaska  AdultWeekday   65.0\n",
       "1   Alaska  AdultWeekday   47.0\n",
       "2   Alaska  AdultWeekday   30.0\n",
       "3  Arizona  AdultWeekday   89.0\n",
       "4  Arizona  AdultWeekday   74.0"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ticket_prices.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This is now in a format we can pass to [seaborn](https://seaborn.pydata.org/)'s [boxplot](https://seaborn.pydata.org/generated/seaborn.boxplot.html) function to create boxplots of the ticket price distributions for each ticket type for each state."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1300x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Code task 16#\n",
    "#Create a seaborn boxplot of the ticket price dataframe we created above,\n",
    "#with 'state' on the x-axis, 'Price' as the y-value, and a hue that indicates 'Ticket'\n",
    "#This will use boxplot's x, y, hue, and data arguments.\n",
    "plt.subplots(figsize=(13, 8))\n",
    "sns.boxplot(x='state', y='Price',hue='Ticket', data=ticket_prices)\n",
    "plt.xticks(rotation='vertical')\n",
    "plt.ylabel('Price ($)')\n",
    "plt.xlabel('State');"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Aside from some relatively expensive ticket prices in California, Colorado, and Utah, most prices appear to lie in a broad band from around 25 to over 100 dollars. Some States show more variability than others. Montana and South Dakota, for example, both show fairly small variability as well as matching weekend and weekday ticket prices. Nevada and Utah, on the other hand, show the most range in prices. Some States, notably North Carolina and Virginia, have weekend prices far higher than weekday prices. You could be inspired from this exploration to consider a few potential groupings of resorts, those with low spread, those with lower averages, and those that charge a premium for weekend tickets. However, you're told that you are taking all resorts to be part of the same market share, you  could argue against further segment the resorts. Nevertheless, ways to consider using the State information in your modelling include:\n",
    "\n",
    "* disregard State completely\n",
    "* retain all State information\n",
    "* retain State in the form of Montana vs not Montana, as our target resort is in Montana\n",
    "\n",
    "You've also noted another effect above: some States show a marked difference between weekday and weekend ticket prices. It may make sense to allow a model to take into account not just State but also weekend vs weekday."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Thus we currently have two main questions you want to resolve:\n",
    "\n",
    "* What do you do about the two types of ticket price?\n",
    "* What do you do about the state information?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2.6.4 Numeric Features<a id='2.6.4_Numeric_Features'></a>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "Having decided to reserve judgement on how exactly you utilize the State, turn your attention to cleaning the numeric features."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 2.6.4.1 Numeric data summary<a id='2.6.4.1_Numeric_data_summary'></a>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>summit_elev</th>\n",
       "      <td>330.0</td>\n",
       "      <td>4591.818182</td>\n",
       "      <td>3735.535934</td>\n",
       "      <td>315.0</td>\n",
       "      <td>1403.75</td>\n",
       "      <td>3127.5</td>\n",
       "      <td>7806.00</td>\n",
       "      <td>13487.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>vertical_drop</th>\n",
       "      <td>330.0</td>\n",
       "      <td>1215.427273</td>\n",
       "      <td>947.864557</td>\n",
       "      <td>60.0</td>\n",
       "      <td>461.25</td>\n",
       "      <td>964.5</td>\n",
       "      <td>1800.00</td>\n",
       "      <td>4425.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>base_elev</th>\n",
       "      <td>330.0</td>\n",
       "      <td>3374.000000</td>\n",
       "      <td>3117.121621</td>\n",
       "      <td>70.0</td>\n",
       "      <td>869.00</td>\n",
       "      <td>1561.5</td>\n",
       "      <td>6325.25</td>\n",
       "      <td>10800.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>trams</th>\n",
       "      <td>330.0</td>\n",
       "      <td>0.172727</td>\n",
       "      <td>0.559946</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fastEight</th>\n",
       "      <td>164.0</td>\n",
       "      <td>0.006098</td>\n",
       "      <td>0.078087</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fastSixes</th>\n",
       "      <td>330.0</td>\n",
       "      <td>0.184848</td>\n",
       "      <td>0.651685</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>6.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fastQuads</th>\n",
       "      <td>330.0</td>\n",
       "      <td>1.018182</td>\n",
       "      <td>2.198294</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.00</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>quad</th>\n",
       "      <td>330.0</td>\n",
       "      <td>0.933333</td>\n",
       "      <td>1.312245</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.00</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>triple</th>\n",
       "      <td>330.0</td>\n",
       "      <td>1.500000</td>\n",
       "      <td>1.619130</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.00</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>double</th>\n",
       "      <td>330.0</td>\n",
       "      <td>1.833333</td>\n",
       "      <td>1.815028</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3.00</td>\n",
       "      <td>14.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>surface</th>\n",
       "      <td>330.0</td>\n",
       "      <td>2.621212</td>\n",
       "      <td>2.059636</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.00</td>\n",
       "      <td>2.0</td>\n",
       "      <td>3.00</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total_chairs</th>\n",
       "      <td>330.0</td>\n",
       "      <td>8.266667</td>\n",
       "      <td>5.798683</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.00</td>\n",
       "      <td>7.0</td>\n",
       "      <td>10.00</td>\n",
       "      <td>41.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Runs</th>\n",
       "      <td>326.0</td>\n",
       "      <td>48.214724</td>\n",
       "      <td>46.364077</td>\n",
       "      <td>3.0</td>\n",
       "      <td>19.00</td>\n",
       "      <td>33.0</td>\n",
       "      <td>60.00</td>\n",
       "      <td>341.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>TerrainParks</th>\n",
       "      <td>279.0</td>\n",
       "      <td>2.820789</td>\n",
       "      <td>2.008113</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.00</td>\n",
       "      <td>2.0</td>\n",
       "      <td>4.00</td>\n",
       "      <td>14.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>LongestRun_mi</th>\n",
       "      <td>325.0</td>\n",
       "      <td>1.433231</td>\n",
       "      <td>1.156171</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.50</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.00</td>\n",
       "      <td>6.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SkiableTerrain_ac</th>\n",
       "      <td>327.0</td>\n",
       "      <td>739.801223</td>\n",
       "      <td>1816.167441</td>\n",
       "      <td>8.0</td>\n",
       "      <td>85.00</td>\n",
       "      <td>200.0</td>\n",
       "      <td>690.00</td>\n",
       "      <td>26819.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Snow Making_ac</th>\n",
       "      <td>284.0</td>\n",
       "      <td>174.873239</td>\n",
       "      <td>261.336125</td>\n",
       "      <td>2.0</td>\n",
       "      <td>50.00</td>\n",
       "      <td>100.0</td>\n",
       "      <td>200.50</td>\n",
       "      <td>3379.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>daysOpenLastYear</th>\n",
       "      <td>279.0</td>\n",
       "      <td>115.103943</td>\n",
       "      <td>35.063251</td>\n",
       "      <td>3.0</td>\n",
       "      <td>97.00</td>\n",
       "      <td>114.0</td>\n",
       "      <td>135.00</td>\n",
       "      <td>305.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>yearsOpen</th>\n",
       "      <td>329.0</td>\n",
       "      <td>63.656535</td>\n",
       "      <td>109.429928</td>\n",
       "      <td>6.0</td>\n",
       "      <td>50.00</td>\n",
       "      <td>58.0</td>\n",
       "      <td>69.00</td>\n",
       "      <td>2019.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>averageSnowfall</th>\n",
       "      <td>316.0</td>\n",
       "      <td>185.316456</td>\n",
       "      <td>136.356842</td>\n",
       "      <td>18.0</td>\n",
       "      <td>69.00</td>\n",
       "      <td>150.0</td>\n",
       "      <td>300.00</td>\n",
       "      <td>669.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AdultWeekday</th>\n",
       "      <td>276.0</td>\n",
       "      <td>57.916957</td>\n",
       "      <td>26.140126</td>\n",
       "      <td>15.0</td>\n",
       "      <td>40.00</td>\n",
       "      <td>50.0</td>\n",
       "      <td>71.00</td>\n",
       "      <td>179.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AdultWeekend</th>\n",
       "      <td>279.0</td>\n",
       "      <td>64.166810</td>\n",
       "      <td>24.554584</td>\n",
       "      <td>17.0</td>\n",
       "      <td>47.00</td>\n",
       "      <td>60.0</td>\n",
       "      <td>77.50</td>\n",
       "      <td>179.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>projectedDaysOpen</th>\n",
       "      <td>283.0</td>\n",
       "      <td>120.053004</td>\n",
       "      <td>31.045963</td>\n",
       "      <td>30.0</td>\n",
       "      <td>100.00</td>\n",
       "      <td>120.0</td>\n",
       "      <td>139.50</td>\n",
       "      <td>305.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NightSkiing_ac</th>\n",
       "      <td>187.0</td>\n",
       "      <td>100.395722</td>\n",
       "      <td>105.169620</td>\n",
       "      <td>2.0</td>\n",
       "      <td>40.00</td>\n",
       "      <td>72.0</td>\n",
       "      <td>114.00</td>\n",
       "      <td>650.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   count         mean          std    min      25%     50%  \\\n",
       "summit_elev        330.0  4591.818182  3735.535934  315.0  1403.75  3127.5   \n",
       "vertical_drop      330.0  1215.427273   947.864557   60.0   461.25   964.5   \n",
       "base_elev          330.0  3374.000000  3117.121621   70.0   869.00  1561.5   \n",
       "trams              330.0     0.172727     0.559946    0.0     0.00     0.0   \n",
       "fastEight          164.0     0.006098     0.078087    0.0     0.00     0.0   \n",
       "fastSixes          330.0     0.184848     0.651685    0.0     0.00     0.0   \n",
       "fastQuads          330.0     1.018182     2.198294    0.0     0.00     0.0   \n",
       "quad               330.0     0.933333     1.312245    0.0     0.00     0.0   \n",
       "triple             330.0     1.500000     1.619130    0.0     0.00     1.0   \n",
       "double             330.0     1.833333     1.815028    0.0     1.00     1.0   \n",
       "surface            330.0     2.621212     2.059636    0.0     1.00     2.0   \n",
       "total_chairs       330.0     8.266667     5.798683    0.0     5.00     7.0   \n",
       "Runs               326.0    48.214724    46.364077    3.0    19.00    33.0   \n",
       "TerrainParks       279.0     2.820789     2.008113    1.0     1.00     2.0   \n",
       "LongestRun_mi      325.0     1.433231     1.156171    0.0     0.50     1.0   \n",
       "SkiableTerrain_ac  327.0   739.801223  1816.167441    8.0    85.00   200.0   \n",
       "Snow Making_ac     284.0   174.873239   261.336125    2.0    50.00   100.0   \n",
       "daysOpenLastYear   279.0   115.103943    35.063251    3.0    97.00   114.0   \n",
       "yearsOpen          329.0    63.656535   109.429928    6.0    50.00    58.0   \n",
       "averageSnowfall    316.0   185.316456   136.356842   18.0    69.00   150.0   \n",
       "AdultWeekday       276.0    57.916957    26.140126   15.0    40.00    50.0   \n",
       "AdultWeekend       279.0    64.166810    24.554584   17.0    47.00    60.0   \n",
       "projectedDaysOpen  283.0   120.053004    31.045963   30.0   100.00   120.0   \n",
       "NightSkiing_ac     187.0   100.395722   105.169620    2.0    40.00    72.0   \n",
       "\n",
       "                       75%      max  \n",
       "summit_elev        7806.00  13487.0  \n",
       "vertical_drop      1800.00   4425.0  \n",
       "base_elev          6325.25  10800.0  \n",
       "trams                 0.00      4.0  \n",
       "fastEight             0.00      1.0  \n",
       "fastSixes             0.00      6.0  \n",
       "fastQuads             1.00     15.0  \n",
       "quad                  1.00      8.0  \n",
       "triple                2.00      8.0  \n",
       "double                3.00     14.0  \n",
       "surface               3.00     15.0  \n",
       "total_chairs         10.00     41.0  \n",
       "Runs                 60.00    341.0  \n",
       "TerrainParks          4.00     14.0  \n",
       "LongestRun_mi         2.00      6.0  \n",
       "SkiableTerrain_ac   690.00  26819.0  \n",
       "Snow Making_ac      200.50   3379.0  \n",
       "daysOpenLastYear    135.00    305.0  \n",
       "yearsOpen            69.00   2019.0  \n",
       "averageSnowfall     300.00    669.0  \n",
       "AdultWeekday         71.00    179.0  \n",
       "AdultWeekend         77.50    179.0  \n",
       "projectedDaysOpen   139.50    305.0  \n",
       "NightSkiing_ac      114.00    650.0  "
      ]
     },
     "execution_count": 92,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Code task 17#\n",
    "#Call ski_data's `describe` method for a statistical summary of the numerical columns\n",
    "#Hint: there are fewer summary stat columns than features, so displaying the transpose\n",
    "#will be useful again\n",
    "ski_data_describe = ski_data.describe().T\n",
    "ski_data_describe"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Recall you're missing the ticket prices for some 16% of resorts. This is a fundamental problem that means you simply lack the required data for those resorts and will have to drop those records. But you may have a weekend price and not a weekday price, or vice versa. You want to keep any price you have."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    82.424242\n",
       "2    14.242424\n",
       "1     3.333333\n",
       "dtype: float64"
      ]
     },
     "execution_count": 94,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "missing_price = ski_data[['AdultWeekend', 'AdultWeekday']].isnull().sum(axis=1)\n",
    "missing_price.value_counts()/len(missing_price) * 100"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Just over 82% of resorts have no missing ticket price, 3% are missing one value, and 14% are missing both. You will definitely want to drop the records for which you have no price information, however you will not do so just yet. There may still be useful information about the distributions of other features in that 14% of the data."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 2.6.4.2 Distributions Of Feature Values<a id='2.6.4.2_Distributions_Of_Feature_Values'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Note that, although we are still in the 'data wrangling and cleaning' phase rather than exploratory data analysis, looking at distributions of features is immensely useful in getting a feel for whether the values look sensible and whether there are any obvious outliers to investigate. Some exploratory data analysis belongs here, and data wrangling will inevitably occur later on. It's more a matter of emphasis. Here, we're interesting in focusing on whether distributions look plausible or wrong. Later on, we're more interested in relationships and patterns."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1500x1000 with 25 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Code task 18#\n",
    "#Call ski_data's `hist` method to plot histograms of each of the numeric features\n",
    "#Try passing it an argument figsize=(15,10)\n",
    "#Try calling plt.subplots_adjust() with an argument hspace=0.5 to adjust the spacing\n",
    "#It's important you create legible and easy-to-read plots\n",
    "ski_data.hist(figsize=(15,10));\n",
    "#plt.subplots_adjust(hspace=0.5);\n",
    "plt.subplots_adjust(hspace=0.5);\n",
    "\n",
    "#Hint: notice how the terminating ';' \"swallows\" some messy output and leads to a tidier notebook"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "What features do we have possible cause for concern about and why?\n",
    "\n",
    "* SkiableTerrain_ac because values are clustered down the low end,\n",
    "* Snow Making_ac for the same reason,\n",
    "* fastEight because all but one value is 0 so it has very little variance, and half the values are missing,\n",
    "* fastSixes raises an amber flag; it has more variability, but still mostly 0,\n",
    "* trams also may get an amber flag for the same reason,\n",
    "* yearsOpen because most values are low but it has a maximum of 2019, which strongly suggests someone recorded calendar year rather than number of years."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### 2.6.4.2.1 SkiableTerrain_ac<a id='2.6.4.2.1_SkiableTerrain_ac'></a>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "39    26819.0\n",
       "Name: SkiableTerrain_ac, dtype: float64"
      ]
     },
     "execution_count": 103,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Code task 19#\n",
    "#Filter the 'SkiableTerrain_ac' column to print the values greater than 10000\n",
    "ski_data.SkiableTerrain_ac[ski_data.SkiableTerrain_ac > 10000]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Q: 2** One resort has an incredibly large skiable terrain area! Which is it?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>39</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Name</th>\n",
       "      <td>Silverton Mountain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Region</th>\n",
       "      <td>Colorado</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>state</th>\n",
       "      <td>Colorado</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>summit_elev</th>\n",
       "      <td>13487</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>vertical_drop</th>\n",
       "      <td>3087</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>base_elev</th>\n",
       "      <td>10400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>trams</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fastEight</th>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fastSixes</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fastQuads</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>quad</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>triple</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>double</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>surface</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total_chairs</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Runs</th>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>TerrainParks</th>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>LongestRun_mi</th>\n",
       "      <td>1.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SkiableTerrain_ac</th>\n",
       "      <td>26819.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Snow Making_ac</th>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>daysOpenLastYear</th>\n",
       "      <td>175.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>yearsOpen</th>\n",
       "      <td>17.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>averageSnowfall</th>\n",
       "      <td>400.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AdultWeekday</th>\n",
       "      <td>79.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AdultWeekend</th>\n",
       "      <td>79.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>projectedDaysOpen</th>\n",
       "      <td>181.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NightSkiing_ac</th>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                   39\n",
       "Name               Silverton Mountain\n",
       "Region                       Colorado\n",
       "state                        Colorado\n",
       "summit_elev                     13487\n",
       "vertical_drop                    3087\n",
       "base_elev                       10400\n",
       "trams                               0\n",
       "fastEight                         0.0\n",
       "fastSixes                           0\n",
       "fastQuads                           0\n",
       "quad                                0\n",
       "triple                              0\n",
       "double                              1\n",
       "surface                             0\n",
       "total_chairs                        1\n",
       "Runs                              NaN\n",
       "TerrainParks                      NaN\n",
       "LongestRun_mi                     1.5\n",
       "SkiableTerrain_ac             26819.0\n",
       "Snow Making_ac                    NaN\n",
       "daysOpenLastYear                175.0\n",
       "yearsOpen                        17.0\n",
       "averageSnowfall                 400.0\n",
       "AdultWeekday                     79.0\n",
       "AdultWeekend                     79.0\n",
       "projectedDaysOpen               181.0\n",
       "NightSkiing_ac                    NaN"
      ]
     },
     "execution_count": 104,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Code task 20#\n",
    "#Now you know there's only one, print the whole row to investigate all values, including seeing the resort name\n",
    "#Hint: don't forget the transpose will be helpful here\n",
    "ski_data[ski_data.SkiableTerrain_ac > 10000].T"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**A: 2** Your answer here"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "But what can you do when you have one record that seems highly suspicious?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "You can see if your data are correct. Search for \"silverton mountain skiable area\". If you do this, you get some [useful information](https://www.google.com/search?q=silverton+mountain+skiable+area)."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![Silverton Mountain information](images/silverton_mountain_info.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "You can spot check data. You see your top and base elevation values agree, but the skiable area is very different. Your suspect value is 26819, but the value you've just looked up is 1819. The last three digits agree. This sort of error could have occured in transmission or some editing or transcription stage. You could plausibly replace the suspect value with the one you've just obtained. Another cautionary note to make here is that although you're doing this in order to progress with your analysis, this is most definitely an issue that should have been raised and fed back to the client or data originator as a query. You should view this \"data correction\" step as a means to continue (documenting it carefully as you do in this notebook) rather than an ultimate decision as to what is correct."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "26819.0"
      ]
     },
     "execution_count": 105,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Code task 21#\n",
    "#Use the .loc accessor to print the 'SkiableTerrain_ac' value only for this resort\n",
    "ski_data.loc[39, 'SkiableTerrain_ac']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Code task 22#\n",
    "#Use the .loc accessor again to modify this value with the correct value of 1819\n",
    "ski_data.loc[39, 'SkiableTerrain_ac'] = 1819"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1819.0"
      ]
     },
     "execution_count": 107,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Code task 23#\n",
    "#Use the .loc accessor a final time to verify that the value has been modified\n",
    "ski_data.loc[39, 'SkiableTerrain_ac']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**NB whilst you may become suspicious about your data quality, and you know you have missing values, you will not here dive down the rabbit hole of checking all values or web scraping to replace missing values.**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "What does the distribution of skiable area look like now?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ski_data.SkiableTerrain_ac.hist(bins=30)\n",
    "plt.xlabel('SkiableTerrain_ac')\n",
    "plt.ylabel('Count')\n",
    "plt.title('Distribution of skiable area (acres) after replacing erroneous value');"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "You now see a rather long tailed distribution. You may wonder about the now most extreme value that is above 8000, but similarly you may also wonder about the value around 7000. If you wanted to spend more time manually checking values you could, but leave this for now. The above distribution is plausible."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### 2.6.4.2.2 Snow Making_ac<a id='2.6.4.2.2_Snow_Making_ac'></a>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "18    1500.0\n",
       "Name: Snow Making_ac, dtype: float64"
      ]
     },
     "execution_count": 114,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ski_data['Snow Making_ac'][ski_data['Snow Making_ac'] > 1000]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>11</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Name</th>\n",
       "      <td>Heavenly Mountain Resort</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Region</th>\n",
       "      <td>Sierra Nevada</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>state</th>\n",
       "      <td>California</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>summit_elev</th>\n",
       "      <td>10067</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>vertical_drop</th>\n",
       "      <td>3500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>base_elev</th>\n",
       "      <td>7170</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>trams</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fastEight</th>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fastSixes</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fastQuads</th>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>quad</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>triple</th>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>double</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>surface</th>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total_chairs</th>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Runs</th>\n",
       "      <td>97.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>TerrainParks</th>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>LongestRun_mi</th>\n",
       "      <td>5.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SkiableTerrain_ac</th>\n",
       "      <td>4800.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Snow Making_ac</th>\n",
       "      <td>3379.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>daysOpenLastYear</th>\n",
       "      <td>155.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>yearsOpen</th>\n",
       "      <td>64.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>averageSnowfall</th>\n",
       "      <td>360.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AdultWeekday</th>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AdultWeekend</th>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>projectedDaysOpen</th>\n",
       "      <td>157.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NightSkiing_ac</th>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                         11\n",
       "Name               Heavenly Mountain Resort\n",
       "Region                        Sierra Nevada\n",
       "state                            California\n",
       "summit_elev                           10067\n",
       "vertical_drop                          3500\n",
       "base_elev                              7170\n",
       "trams                                     2\n",
       "fastEight                               0.0\n",
       "fastSixes                                 2\n",
       "fastQuads                                 7\n",
       "quad                                      1\n",
       "triple                                    5\n",
       "double                                    3\n",
       "surface                                   8\n",
       "total_chairs                             28\n",
       "Runs                                   97.0\n",
       "TerrainParks                            3.0\n",
       "LongestRun_mi                           5.5\n",
       "SkiableTerrain_ac                    4800.0\n",
       "Snow Making_ac                       3379.0\n",
       "daysOpenLastYear                      155.0\n",
       "yearsOpen                              64.0\n",
       "averageSnowfall                       360.0\n",
       "AdultWeekday                            NaN\n",
       "AdultWeekend                            NaN\n",
       "projectedDaysOpen                     157.0\n",
       "NightSkiing_ac                          NaN"
      ]
     },
     "execution_count": 110,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ski_data[ski_data['Snow Making_ac'] > 3000].T"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "You can adopt a similar approach as for the suspect skiable area value and do some spot checking. To save time, here is a link to the website for [Heavenly Mountain Resort](https://www.skiheavenly.com/the-mountain/about-the-mountain/mountain-info.aspx). From this you can glean that you have values for skiable terrain that agree. Furthermore, you can read that snowmaking covers 60% of the trails."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "What, then, is your rough guess for the area covered by snowmaking?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2880.0"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    ".6 * 4800"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "metadata": {},
   "outputs": [
    {
     "ename": "KeyError",
     "evalue": "'[11] not found in axis'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "Cell \u001b[0;32mIn[126], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m ski_data \u001b[38;5;241m=\u001b[39m ski_data\u001b[38;5;241m.\u001b[39mdrop(\u001b[38;5;241m11\u001b[39m)\n",
      "File \u001b[0;32m~/anaconda3/lib/python3.11/site-packages/pandas/util/_decorators.py:331\u001b[0m, in \u001b[0;36mdeprecate_nonkeyword_arguments.<locals>.decorate.<locals>.wrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    325\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mlen\u001b[39m(args) \u001b[38;5;241m>\u001b[39m num_allow_args:\n\u001b[1;32m    326\u001b[0m     warnings\u001b[38;5;241m.\u001b[39mwarn(\n\u001b[1;32m    327\u001b[0m         msg\u001b[38;5;241m.\u001b[39mformat(arguments\u001b[38;5;241m=\u001b[39m_format_argument_list(allow_args)),\n\u001b[1;32m    328\u001b[0m         \u001b[38;5;167;01mFutureWarning\u001b[39;00m,\n\u001b[1;32m    329\u001b[0m         stacklevel\u001b[38;5;241m=\u001b[39mfind_stack_level(),\n\u001b[1;32m    330\u001b[0m     )\n\u001b[0;32m--> 331\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m func(\u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n",
      "File \u001b[0;32m~/anaconda3/lib/python3.11/site-packages/pandas/core/frame.py:5399\u001b[0m, in \u001b[0;36mDataFrame.drop\u001b[0;34m(self, labels, axis, index, columns, level, inplace, errors)\u001b[0m\n\u001b[1;32m   5251\u001b[0m \u001b[38;5;129m@deprecate_nonkeyword_arguments\u001b[39m(version\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, allowed_args\u001b[38;5;241m=\u001b[39m[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mself\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mlabels\u001b[39m\u001b[38;5;124m\"\u001b[39m])\n\u001b[1;32m   5252\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mdrop\u001b[39m(  \u001b[38;5;66;03m# type: ignore[override]\u001b[39;00m\n\u001b[1;32m   5253\u001b[0m     \u001b[38;5;28mself\u001b[39m,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   5260\u001b[0m     errors: IgnoreRaise \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mraise\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[1;32m   5261\u001b[0m ) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m DataFrame \u001b[38;5;241m|\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[1;32m   5262\u001b[0m \u001b[38;5;250m    \u001b[39m\u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[1;32m   5263\u001b[0m \u001b[38;5;124;03m    Drop specified labels from rows or columns.\u001b[39;00m\n\u001b[1;32m   5264\u001b[0m \n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   5397\u001b[0m \u001b[38;5;124;03m            weight  1.0     0.8\u001b[39;00m\n\u001b[1;32m   5398\u001b[0m \u001b[38;5;124;03m    \"\"\"\u001b[39;00m\n\u001b[0;32m-> 5399\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28msuper\u001b[39m()\u001b[38;5;241m.\u001b[39mdrop(\n\u001b[1;32m   5400\u001b[0m         labels\u001b[38;5;241m=\u001b[39mlabels,\n\u001b[1;32m   5401\u001b[0m         axis\u001b[38;5;241m=\u001b[39maxis,\n\u001b[1;32m   5402\u001b[0m         index\u001b[38;5;241m=\u001b[39mindex,\n\u001b[1;32m   5403\u001b[0m         columns\u001b[38;5;241m=\u001b[39mcolumns,\n\u001b[1;32m   5404\u001b[0m         level\u001b[38;5;241m=\u001b[39mlevel,\n\u001b[1;32m   5405\u001b[0m         inplace\u001b[38;5;241m=\u001b[39minplace,\n\u001b[1;32m   5406\u001b[0m         errors\u001b[38;5;241m=\u001b[39merrors,\n\u001b[1;32m   5407\u001b[0m     )\n",
      "File \u001b[0;32m~/anaconda3/lib/python3.11/site-packages/pandas/util/_decorators.py:331\u001b[0m, in \u001b[0;36mdeprecate_nonkeyword_arguments.<locals>.decorate.<locals>.wrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    325\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mlen\u001b[39m(args) \u001b[38;5;241m>\u001b[39m num_allow_args:\n\u001b[1;32m    326\u001b[0m     warnings\u001b[38;5;241m.\u001b[39mwarn(\n\u001b[1;32m    327\u001b[0m         msg\u001b[38;5;241m.\u001b[39mformat(arguments\u001b[38;5;241m=\u001b[39m_format_argument_list(allow_args)),\n\u001b[1;32m    328\u001b[0m         \u001b[38;5;167;01mFutureWarning\u001b[39;00m,\n\u001b[1;32m    329\u001b[0m         stacklevel\u001b[38;5;241m=\u001b[39mfind_stack_level(),\n\u001b[1;32m    330\u001b[0m     )\n\u001b[0;32m--> 331\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m func(\u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n",
      "File \u001b[0;32m~/anaconda3/lib/python3.11/site-packages/pandas/core/generic.py:4505\u001b[0m, in \u001b[0;36mNDFrame.drop\u001b[0;34m(self, labels, axis, index, columns, level, inplace, errors)\u001b[0m\n\u001b[1;32m   4503\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m axis, labels \u001b[38;5;129;01min\u001b[39;00m axes\u001b[38;5;241m.\u001b[39mitems():\n\u001b[1;32m   4504\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m labels \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m-> 4505\u001b[0m         obj \u001b[38;5;241m=\u001b[39m obj\u001b[38;5;241m.\u001b[39m_drop_axis(labels, axis, level\u001b[38;5;241m=\u001b[39mlevel, errors\u001b[38;5;241m=\u001b[39merrors)\n\u001b[1;32m   4507\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m inplace:\n\u001b[1;32m   4508\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_update_inplace(obj)\n",
      "File \u001b[0;32m~/anaconda3/lib/python3.11/site-packages/pandas/core/generic.py:4546\u001b[0m, in \u001b[0;36mNDFrame._drop_axis\u001b[0;34m(self, labels, axis, level, errors, only_slice)\u001b[0m\n\u001b[1;32m   4544\u001b[0m         new_axis \u001b[38;5;241m=\u001b[39m axis\u001b[38;5;241m.\u001b[39mdrop(labels, level\u001b[38;5;241m=\u001b[39mlevel, errors\u001b[38;5;241m=\u001b[39merrors)\n\u001b[1;32m   4545\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m-> 4546\u001b[0m         new_axis \u001b[38;5;241m=\u001b[39m axis\u001b[38;5;241m.\u001b[39mdrop(labels, errors\u001b[38;5;241m=\u001b[39merrors)\n\u001b[1;32m   4547\u001b[0m     indexer \u001b[38;5;241m=\u001b[39m axis\u001b[38;5;241m.\u001b[39mget_indexer(new_axis)\n\u001b[1;32m   4549\u001b[0m \u001b[38;5;66;03m# Case for non-unique axis\u001b[39;00m\n\u001b[1;32m   4550\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n",
      "File \u001b[0;32m~/anaconda3/lib/python3.11/site-packages/pandas/core/indexes/base.py:6934\u001b[0m, in \u001b[0;36mIndex.drop\u001b[0;34m(self, labels, errors)\u001b[0m\n\u001b[1;32m   6932\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m mask\u001b[38;5;241m.\u001b[39many():\n\u001b[1;32m   6933\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m errors \u001b[38;5;241m!=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mignore\u001b[39m\u001b[38;5;124m\"\u001b[39m:\n\u001b[0;32m-> 6934\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;132;01m{\u001b[39;00m\u001b[38;5;28mlist\u001b[39m(labels[mask])\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m not found in axis\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[1;32m   6935\u001b[0m     indexer \u001b[38;5;241m=\u001b[39m indexer[\u001b[38;5;241m~\u001b[39mmask]\n\u001b[1;32m   6936\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mdelete(indexer)\n",
      "\u001b[0;31mKeyError\u001b[0m: '[11] not found in axis'"
     ]
    }
   ],
   "source": [
    "ski_data = ski_data.drop(11)\n",
    "\n",
    "## how to recoever this / how do drop this row without using drop() ******************************"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This is less than the value of 3379 in your data so you may have a judgement call to make. However, notice something else. You have no ticket pricing information at all for this resort. Any further effort spent worrying about values for this resort will be wasted. You'll simply be dropping the entire row!"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### 2.6.4.2.3 fastEight<a id='2.6.4.2.3_fastEight'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Look at the different fastEight values more closely:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "metadata": {},
   "outputs": [
    {
     "ename": "AttributeError",
     "evalue": "'DataFrame' object has no attribute 'fastEight'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
      "Cell \u001b[0;32mIn[131], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m ski_data\u001b[38;5;241m.\u001b[39mfastEight\u001b[38;5;241m.\u001b[39mvalue_counts()\n",
      "File \u001b[0;32m~/anaconda3/lib/python3.11/site-packages/pandas/core/generic.py:5902\u001b[0m, in \u001b[0;36mNDFrame.__getattr__\u001b[0;34m(self, name)\u001b[0m\n\u001b[1;32m   5895\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m (\n\u001b[1;32m   5896\u001b[0m     name \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_internal_names_set\n\u001b[1;32m   5897\u001b[0m     \u001b[38;5;129;01mand\u001b[39;00m name \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_metadata\n\u001b[1;32m   5898\u001b[0m     \u001b[38;5;129;01mand\u001b[39;00m name \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_accessors\n\u001b[1;32m   5899\u001b[0m     \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_info_axis\u001b[38;5;241m.\u001b[39m_can_hold_identifiers_and_holds_name(name)\n\u001b[1;32m   5900\u001b[0m ):\n\u001b[1;32m   5901\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m[name]\n\u001b[0;32m-> 5902\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mobject\u001b[39m\u001b[38;5;241m.\u001b[39m\u001b[38;5;21m__getattribute__\u001b[39m(\u001b[38;5;28mself\u001b[39m, name)\n",
      "\u001b[0;31mAttributeError\u001b[0m: 'DataFrame' object has no attribute 'fastEight'"
     ]
    }
   ],
   "source": [
    "ski_data.fastEight.value_counts()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Drop the fastEight column in its entirety; half the values are missing and all but the others are the value zero. There is essentially no information in this column."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Code task 24#\n",
    "#Drop the 'fastEight' column from ski_data. Use inplace=True\n",
    "ski_data.drop(columns='fastEight', inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "What about yearsOpen? How many resorts have purportedly been open for more than 100 years?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "34      104.0\n",
       "115    2019.0\n",
       "Name: yearsOpen, dtype: float64"
      ]
     },
     "execution_count": 116,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Code task 25#\n",
    "#Filter the 'yearsOpen' column for values greater than 100\n",
    "ski_data.yearsOpen[ski_data.yearsOpen > 100]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Okay, one seems to have been open for 104 years. But beyond that, one is down as having been open for 2019 years. This is wrong! What shall you do about this?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "What does the distribution of yearsOpen look like if you exclude just the obviously wrong one?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Code task 26#\n",
    "#Call the hist method on 'yearsOpen' after filtering for values under 1000\n",
    "#Pass the argument bins=30 to hist(), but feel free to explore other values\n",
    "ski_data.yearsOpen[ski_data.yearsOpen < 2000].hist(bins=40)\n",
    "plt.xlabel('Years open')\n",
    "plt.ylabel('Count')\n",
    "plt.title('Distribution of years open excluding 2019');"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The above distribution of years seems entirely plausible, including the 104 year value. You can certainly state that no resort will have been open for 2019 years! It likely means the resort opened in 2019. It could also mean the resort is due to open in 2019. You don't know when these data were gathered!"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's review the summary statistics for the years under 1000."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 185,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    277.000000\n",
       "mean      57.902527\n",
       "std       17.071288\n",
       "min        6.000000\n",
       "25%       50.000000\n",
       "50%       58.000000\n",
       "75%       70.000000\n",
       "max      104.000000\n",
       "Name: yearsOpen, dtype: float64"
      ]
     },
     "execution_count": 185,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ski_data.yearsOpen[ski_data.yearsOpen < 1000].describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The smallest number of years open otherwise is 6. You can't be sure whether this resort in question has been open zero years or one year and even whether the numbers are projections or actual. In any case, you would be adding a new youngest resort so it feels best to simply drop this row."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0      60.0\n",
      "1      44.0\n",
      "2      36.0\n",
      "3      81.0\n",
      "4      49.0\n",
      "       ... \n",
      "325     9.0\n",
      "326    81.0\n",
      "327    80.0\n",
      "328    59.0\n",
      "329    81.0\n",
      "Name: yearsOpen, Length: 327, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "ski_data = ski_data[ski_data.yearsOpen < 1000]\n",
    "print(ski_data.yearsOpen)\n",
    "\n",
    "##drop which rows?****************************"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### 2.6.4.2.4 fastSixes and Trams<a id='2.6.4.2.4_fastSixes_and_Trams'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The other features you had mild concern over, you will not investigate further. Perhaps take some care when using these features."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.7 Derive State-wide Summary Statistics For Our Market Segment<a id='2.7_Derive_State-wide_Summary_Statistics_For_Our_Market_Segment'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "You have, by this point removed one row, but it was for a resort that may not have opened yet, or perhaps in its first season. Using your business knowledge, you know that state-wide supply and demand of certain skiing resources may well factor into pricing strategies. Does a resort dominate the available night skiing in a state? Or does it account for a large proportion of the total skiable terrain or days open?\n",
    "\n",
    "If you want to add any features to your data that captures the state-wide market size, you should do this now, before dropping any more rows. In the next section, you'll drop rows with missing price information. Although you don't know what those resorts charge for their tickets, you do know the resorts exists and have been open for at least six years. Thus, you'll now calculate some state-wide summary statistics for later use."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Many features in your data pertain to chairlifts, that is for getting people around each resort. These aren't relevant, nor are the features relating to altitudes. Features that you may be interested in are:\n",
    "\n",
    "* TerrainParks\n",
    "* SkiableTerrain_ac\n",
    "* daysOpenLastYear\n",
    "* NightSkiing_ac\n",
    "\n",
    "When you think about it, these are features it makes sense to sum: the total number of terrain parks, the total skiable area, the total number of days open, and the total area available for night skiing. You might consider the total number of ski runs, but understand that the skiable area is more informative than just a number of runs."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "A fairly new groupby behaviour is [named aggregation](https://pandas-docs.github.io/pandas-docs-travis/whatsnew/v0.25.0.html). This allows us to clearly perform the aggregations you want whilst also creating informative output column names."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>resorts_per_state</th>\n",
       "      <th>state_total_skiable_area_ac</th>\n",
       "      <th>state_total_days_open</th>\n",
       "      <th>state_total_terrain_parks</th>\n",
       "      <th>state_total_nightskiing_ac</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>state</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Alaska</th>\n",
       "      <td>3</td>\n",
       "      <td>2280.0</td>\n",
       "      <td>345.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>580.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Arizona</th>\n",
       "      <td>2</td>\n",
       "      <td>1577.0</td>\n",
       "      <td>237.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>80.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>California</th>\n",
       "      <td>20</td>\n",
       "      <td>21148.0</td>\n",
       "      <td>2583.0</td>\n",
       "      <td>78.0</td>\n",
       "      <td>587.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Colorado</th>\n",
       "      <td>22</td>\n",
       "      <td>43682.0</td>\n",
       "      <td>3258.0</td>\n",
       "      <td>74.0</td>\n",
       "      <td>428.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Connecticut</th>\n",
       "      <td>5</td>\n",
       "      <td>358.0</td>\n",
       "      <td>353.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>256.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             resorts_per_state  state_total_skiable_area_ac  \\\n",
       "state                                                         \n",
       "Alaska                       3                       2280.0   \n",
       "Arizona                      2                       1577.0   \n",
       "California                  20                      21148.0   \n",
       "Colorado                    22                      43682.0   \n",
       "Connecticut                  5                        358.0   \n",
       "\n",
       "             state_total_days_open  state_total_terrain_parks  \\\n",
       "state                                                           \n",
       "Alaska                       345.0                        4.0   \n",
       "Arizona                      237.0                        6.0   \n",
       "California                  2583.0                       78.0   \n",
       "Colorado                    3258.0                       74.0   \n",
       "Connecticut                  353.0                       10.0   \n",
       "\n",
       "             state_total_nightskiing_ac  \n",
       "state                                    \n",
       "Alaska                            580.0  \n",
       "Arizona                            80.0  \n",
       "California                        587.0  \n",
       "Colorado                          428.0  \n",
       "Connecticut                       256.0  "
      ]
     },
     "execution_count": 123,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Code task 27#\n",
    "#Add named aggregations for the sum of 'daysOpenLastYear', 'TerrainParks', and 'NightSkiing_ac'\n",
    "#call them 'state_total_days_open', 'state_total_terrain_parks', and 'state_total_nightskiing_ac',\n",
    "#respectively\n",
    "#Finally, add a call to the reset_index() method (we recommend you experiment with and without this to see\n",
    "#what it does)\n",
    "state_summary = ski_data.groupby('state').agg(\n",
    "    resorts_per_state=pd.NamedAgg(column='Name', aggfunc='size'), #could pick any column here\n",
    "    state_total_skiable_area_ac=pd.NamedAgg(column='SkiableTerrain_ac', aggfunc='sum'),\n",
    "    state_total_days_open=pd.NamedAgg(column='daysOpenLastYear', aggfunc='sum'),\n",
    "    state_total_terrain_parks=pd.NamedAgg(column='TerrainParks', aggfunc='sum'),\n",
    "    state_total_nightskiing_ac=pd.NamedAgg(column='NightSkiing_ac', aggfunc='sum')\n",
    ")\n",
    "state_summary.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.8 Drop Rows With No Price Data<a id='2.8_Drop_Rows_With_No_Price_Data'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "You know there are two columns that refer to price: 'AdultWeekend' and 'AdultWeekday'. You can calculate the number of price values missing per row. This will obviously have to be either 0, 1, or 2, where 0 denotes no price values are missing and 2 denotes that both are missing."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    96.085409\n",
       "1     3.914591\n",
       "dtype: float64"
      ]
     },
     "execution_count": 129,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "missing_price = ski_data[['AdultWeekend', 'AdultWeekday']].isnull().sum(axis=1)\n",
    "missing_price.value_counts()/len(missing_price) * 100"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "About 14% of the rows have no price data. As the price is your target, these rows are of no use. Time to lose them."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Code task 28#\n",
    "#Use `missing_price` to remove rows from ski_data where both price values are missing\n",
    "ski_data = ski_data[missing_price != 2]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.9 Review distributions<a id='2.9_Review_distributions'></a>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1500x1000 with 25 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ski_data.hist(figsize=(15, 10))\n",
    "plt.subplots_adjust(hspace=0.5);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "These distributions are much better. There are clearly some skewed distributions, so keep an eye on `fastQuads`, `fastSixes`, and perhaps `trams`. These lack much variance away from 0 and may have a small number of relatively extreme values.  Models failing to rate a feature as important when domain knowledge tells you it should be is an issue to look out for, as is a model being overly influenced by some extreme values. If you build a good machine learning pipeline, hopefully it will be robust to such issues, but you may also wish to consider nonlinear transformations of features."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.10 Population data<a id='2.10_Population_data'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Population and area data for the US states can be obtained from [wikipedia](https://simple.wikipedia.org/wiki/List_of_U.S._states). Listen, you should have a healthy concern about using data you \"found on the Internet\". Make sure it comes from a reputable source. This table of data is useful because it allows you to easily pull and incorporate an external data set. It also allows you to proceed with an analysis that includes state sizes and populations for your 'first cut' model. Be explicit about your source (we documented it here in this workflow) and ensure it is open to inspection. All steps are subject to review, and it may be that a client has a specific source of data they trust that you should use to rerun the analysis."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 193,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Code task 29#\n",
    "#Use pandas' `read_html` method to read the table from the URL below\n",
    "states_url = 'https://simple.wikipedia.org/w/index.php?title=List_of_U.S._states&oldid=7168473'\n",
    "usa_states = pd.read_html(states_url)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 195,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[   Name & postal abbs. [1]                                    Cities  \\\n",
       "    Name & postal abbs. [1] Name & postal abbs. [1].1         Capital   \n",
       " 0                  Alabama                        AL      Montgomery   \n",
       " 1                   Alaska                        AK          Juneau   \n",
       " 2                  Arizona                        AZ         Phoenix   \n",
       " 3                 Arkansas                        AR     Little Rock   \n",
       " 4               California                        CA      Sacramento   \n",
       " 5                 Colorado                        CO          Denver   \n",
       " 6              Connecticut                        CT        Hartford   \n",
       " 7                 Delaware                        DE           Dover   \n",
       " 8                  Florida                        FL     Tallahassee   \n",
       " 9                  Georgia                        GA         Atlanta   \n",
       " 10                 Hawaiʻi                        HI        Honolulu   \n",
       " 11                   Idaho                        ID           Boise   \n",
       " 12                Illinois                        IL     Springfield   \n",
       " 13                 Indiana                        IN    Indianapolis   \n",
       " 14                    Iowa                        IA      Des Moines   \n",
       " 15                  Kansas                        KS          Topeka   \n",
       " 16             Kentucky[C]                        KY       Frankfort   \n",
       " 17               Louisiana                        LA     Baton Rouge   \n",
       " 18                   Maine                        ME         Augusta   \n",
       " 19                Maryland                        MD       Annapolis   \n",
       " 20        Massachusetts[C]                        MA          Boston   \n",
       " 21                Michigan                        MI         Lansing   \n",
       " 22               Minnesota                        MN        St. Paul   \n",
       " 23             Mississippi                        MS         Jackson   \n",
       " 24                Missouri                        MO  Jefferson City   \n",
       " 25                 Montana                        MT          Helena   \n",
       " 26                Nebraska                        NE         Lincoln   \n",
       " 27                  Nevada                        NV     Carson City   \n",
       " 28           New Hampshire                        NH         Concord   \n",
       " 29              New Jersey                        NJ         Trenton   \n",
       " 30              New Mexico                        NM        Santa Fe   \n",
       " 31                New York                        NY          Albany   \n",
       " 32          North Carolina                        NC         Raleigh   \n",
       " 33            North Dakota                        ND        Bismarck   \n",
       " 34                    Ohio                        OH        Columbus   \n",
       " 35                Oklahoma                        OK   Oklahoma City   \n",
       " 36                  Oregon                        OR           Salem   \n",
       " 37         Pennsylvania[C]                        PA      Harrisburg   \n",
       " 38         Rhode Island[D]                        RI      Providence   \n",
       " 39          South Carolina                        SC        Columbia   \n",
       " 40            South Dakota                        SD          Pierre   \n",
       " 41               Tennessee                        TN       Nashville   \n",
       " 42                   Texas                        TX          Austin   \n",
       " 43                    Utah                        UT  Salt Lake City   \n",
       " 44                 Vermont                        VT      Montpelier   \n",
       " 45             Virginia[C]                        VA        Richmond   \n",
       " 46              Washington                        WA         Olympia   \n",
       " 47           West Virginia                        WV      Charleston   \n",
       " 48               Wisconsin                        WI         Madison   \n",
       " 49                 Wyoming                        WY        Cheyenne   \n",
       " \n",
       "                    Established[A] Population [B][3] Total area[4]           \\\n",
       "         Largest[5] Established[A] Population [B][3]           mi2      km2   \n",
       " 0       Birmingham   Dec 14, 1819           4903185         52420   135767   \n",
       " 1        Anchorage    Jan 3, 1959            731545        665384  1723337   \n",
       " 2          Phoenix   Feb 14, 1912           7278717        113990   295234   \n",
       " 3      Little Rock   Jun 15, 1836           3017804         53179   137732   \n",
       " 4      Los Angeles    Sep 9, 1850          39512223        163695   423967   \n",
       " 5           Denver    Aug 1, 1876           5758736        104094   269601   \n",
       " 6       Bridgeport    Jan 9, 1788           3565278          5543    14357   \n",
       " 7       Wilmington    Dec 7, 1787            973764          2489     6446   \n",
       " 8     Jacksonville    Mar 3, 1845          21477737         65758   170312   \n",
       " 9          Atlanta    Jan 2, 1788          10617423         59425   153910   \n",
       " 10        Honolulu   Aug 21, 1959           1415872         10932    28313   \n",
       " 11           Boise    Jul 3, 1890           1787065         83569   216443   \n",
       " 12         Chicago    Dec 3, 1818          12671821         57914   149995   \n",
       " 13    Indianapolis   Dec 11, 1816           6732219         36420    94326   \n",
       " 14      Des Moines   Dec 28, 1846           3155070         56273   145746   \n",
       " 15         Wichita   Jan 29, 1861           2913314         82278   213100   \n",
       " 16      Louisville    Jun 1, 1792           4467673         40408   104656   \n",
       " 17     New Orleans   Apr 30, 1812           4648794         52378   135659   \n",
       " 18        Portland   Mar 15, 1820           1344212         35380    91633   \n",
       " 19       Baltimore   Apr 28, 1788           6045680         12406    32131   \n",
       " 20          Boston    Feb 6, 1788           6892503         10554    27336   \n",
       " 21         Detroit   Jan 26, 1837           9986857         96714   250487   \n",
       " 22     Minneapolis   May 11, 1858           5639632         86936   225163   \n",
       " 23         Jackson   Dec 10, 1817           2976149         48432   125438   \n",
       " 24     Kansas City   Aug 10, 1821           6137428         69707   180540   \n",
       " 25        Billings    Nov 8, 1889           1068778        147040   380831   \n",
       " 26           Omaha    Mar 1, 1867           1934408         77348   200330   \n",
       " 27       Las Vegas   Oct 31, 1864           3080156        110572   286380   \n",
       " 28      Manchester   Jun 21, 1788           1359711          9349    24214   \n",
       " 29          Newark   Dec 18, 1787           8882190          8723    22591   \n",
       " 30     Albuquerque    Jan 6, 1912           2096829        121590   314917   \n",
       " 31        New York   Jul 26, 1788          19453561         54555   141297   \n",
       " 32       Charlotte   Nov 21, 1789          10488084         53819   139391   \n",
       " 33           Fargo    Nov 2, 1889            762062         70698   183108   \n",
       " 34        Columbus    Mar 1, 1803          11689100         44826   116098   \n",
       " 35   Oklahoma City   Nov 16, 1907           3956971         69899   181037   \n",
       " 36        Portland   Feb 14, 1859           4217737         98379   254799   \n",
       " 37    Philadelphia   Dec 12, 1787          12801989         46054   119280   \n",
       " 38      Providence   May 29, 1790           1059361          1545     4001   \n",
       " 39      Charleston   May 23, 1788           5148714         32020    82933   \n",
       " 40     Sioux Falls    Nov 2, 1889            884659         77116   199729   \n",
       " 41       Nashville    Jun 1, 1796           6829174         42144   109153   \n",
       " 42         Houston   Dec 29, 1845          28995881        268596   695662   \n",
       " 43  Salt Lake City    Jan 4, 1896           3205958         84897   219882   \n",
       " 44      Burlington    Mar 4, 1791            623989          9616    24906   \n",
       " 45  Virginia Beach   Jun 25, 1788           8535519         42775   110787   \n",
       " 46         Seattle   Nov 11, 1889           7614893         71298   184661   \n",
       " 47      Charleston   Jun 20, 1863           1792147         24230    62756   \n",
       " 48       Milwaukee   May 29, 1848           5822434         65496   169635   \n",
       " 49        Cheyenne   Jul 10, 1890            578759         97813   253335   \n",
       " \n",
       "    Land area[4]          Water area[4]         Number of Reps.  \n",
       "             mi2      km2           mi2     km2 Number of Reps.  \n",
       " 0         50645   131171          1775    4597               7  \n",
       " 1        570641  1477953         94743  245384               1  \n",
       " 2        113594   294207           396    1026               9  \n",
       " 3         52035   134771          1143    2961               4  \n",
       " 4        155779   403466          7916   20501              53  \n",
       " 5        103642   268431           452    1170               7  \n",
       " 6          4842    12542           701    1816               5  \n",
       " 7          1949     5047           540    1399               1  \n",
       " 8         53625   138887         12133   31424              27  \n",
       " 9         57513   148959          1912    4951              14  \n",
       " 10         6423    16635          4509   11678               2  \n",
       " 11        82643   214045           926    2398               2  \n",
       " 12        55519   143793          2395    6202              18  \n",
       " 13        35826    92789           593    1537               9  \n",
       " 14        55857   144669           416    1077               4  \n",
       " 15        81759   211754           520    1346               4  \n",
       " 16        39486   102269           921    2387               6  \n",
       " 17        43204   111898          9174   23761               6  \n",
       " 18        30843    79883          4537   11750               2  \n",
       " 19         9707    25142          2699    6990               8  \n",
       " 20         7800    20202          2754    7134               9  \n",
       " 21        56539   146435         40175  104052              14  \n",
       " 22        79627   206232          7309   18930               8  \n",
       " 23        46923   121531          1508    3907               4  \n",
       " 24        68742   178040           965    2501               8  \n",
       " 25       145546   376962          1494    3869               1  \n",
       " 26        76824   198974           524    1356               3  \n",
       " 27       109781   284332           791    2048               4  \n",
       " 28         8953    23187           397    1027               2  \n",
       " 29         7354    19047          1368    3544              12  \n",
       " 30       121298   314161           292     757               3  \n",
       " 31        47126   122057          7429   19240              27  \n",
       " 32        48618   125920          5201   13471              13  \n",
       " 33        69001   178711          1698    4397               1  \n",
       " 34        40861   105829          3965   10269              16  \n",
       " 35        68595   177660          1304    3377               5  \n",
       " 36        95988   248608          2391    6191               5  \n",
       " 37        44743   115883          1312    3397              18  \n",
       " 38         1034     2678           511    1324               2  \n",
       " 39        30061    77857          1960    5076               7  \n",
       " 40        75811   196350          1305    3379               1  \n",
       " 41        41235   106798           909    2355               9  \n",
       " 42       261232   676587          7365   19075              36  \n",
       " 43        82170   212818          2727    7064               4  \n",
       " 44         9217    23871           400    1035               1  \n",
       " 45        39490   102279          3285    8508              11  \n",
       " 46        66456   172119          4842   12542              10  \n",
       " 47        24038    62259           192     497               3  \n",
       " 48        54158   140268         11339   29367               8  \n",
       " 49        97093   251470           720    1864               1  ]"
      ]
     },
     "execution_count": 195,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "usa_states"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 188,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "list"
      ]
     },
     "execution_count": 188,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(usa_states)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 189,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1"
      ]
     },
     "execution_count": 189,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(usa_states)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 190,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"2\" halign=\"left\">Name &amp; postal abbs. [1]</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Cities</th>\n",
       "      <th>Established[A]</th>\n",
       "      <th>Population [B][3]</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Total area[4]</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Land area[4]</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Water area[4]</th>\n",
       "      <th>Number of Reps.</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>Name &amp; postal abbs. [1]</th>\n",
       "      <th>Name &amp; postal abbs. [1].1</th>\n",
       "      <th>Capital</th>\n",
       "      <th>Largest[5]</th>\n",
       "      <th>Established[A]</th>\n",
       "      <th>Population [B][3]</th>\n",
       "      <th>mi2</th>\n",
       "      <th>km2</th>\n",
       "      <th>mi2</th>\n",
       "      <th>km2</th>\n",
       "      <th>mi2</th>\n",
       "      <th>km2</th>\n",
       "      <th>Number of Reps.</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Alabama</td>\n",
       "      <td>AL</td>\n",
       "      <td>Montgomery</td>\n",
       "      <td>Birmingham</td>\n",
       "      <td>Dec 14, 1819</td>\n",
       "      <td>4903185</td>\n",
       "      <td>52420</td>\n",
       "      <td>135767</td>\n",
       "      <td>50645</td>\n",
       "      <td>131171</td>\n",
       "      <td>1775</td>\n",
       "      <td>4597</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Alaska</td>\n",
       "      <td>AK</td>\n",
       "      <td>Juneau</td>\n",
       "      <td>Anchorage</td>\n",
       "      <td>Jan 3, 1959</td>\n",
       "      <td>731545</td>\n",
       "      <td>665384</td>\n",
       "      <td>1723337</td>\n",
       "      <td>570641</td>\n",
       "      <td>1477953</td>\n",
       "      <td>94743</td>\n",
       "      <td>245384</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Arizona</td>\n",
       "      <td>AZ</td>\n",
       "      <td>Phoenix</td>\n",
       "      <td>Phoenix</td>\n",
       "      <td>Feb 14, 1912</td>\n",
       "      <td>7278717</td>\n",
       "      <td>113990</td>\n",
       "      <td>295234</td>\n",
       "      <td>113594</td>\n",
       "      <td>294207</td>\n",
       "      <td>396</td>\n",
       "      <td>1026</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Arkansas</td>\n",
       "      <td>AR</td>\n",
       "      <td>Little Rock</td>\n",
       "      <td>Little Rock</td>\n",
       "      <td>Jun 15, 1836</td>\n",
       "      <td>3017804</td>\n",
       "      <td>53179</td>\n",
       "      <td>137732</td>\n",
       "      <td>52035</td>\n",
       "      <td>134771</td>\n",
       "      <td>1143</td>\n",
       "      <td>2961</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>California</td>\n",
       "      <td>CA</td>\n",
       "      <td>Sacramento</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>Sep 9, 1850</td>\n",
       "      <td>39512223</td>\n",
       "      <td>163695</td>\n",
       "      <td>423967</td>\n",
       "      <td>155779</td>\n",
       "      <td>403466</td>\n",
       "      <td>7916</td>\n",
       "      <td>20501</td>\n",
       "      <td>53</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Name & postal abbs. [1]                                 Cities               \\\n",
       "  Name & postal abbs. [1] Name & postal abbs. [1].1      Capital   Largest[5]   \n",
       "0                 Alabama                        AL   Montgomery   Birmingham   \n",
       "1                  Alaska                        AK       Juneau    Anchorage   \n",
       "2                 Arizona                        AZ      Phoenix      Phoenix   \n",
       "3                Arkansas                        AR  Little Rock  Little Rock   \n",
       "4              California                        CA   Sacramento  Los Angeles   \n",
       "\n",
       "  Established[A] Population [B][3] Total area[4]          Land area[4]  \\\n",
       "  Established[A] Population [B][3]           mi2      km2          mi2   \n",
       "0   Dec 14, 1819           4903185         52420   135767        50645   \n",
       "1    Jan 3, 1959            731545        665384  1723337       570641   \n",
       "2   Feb 14, 1912           7278717        113990   295234       113594   \n",
       "3   Jun 15, 1836           3017804         53179   137732        52035   \n",
       "4    Sep 9, 1850          39512223        163695   423967       155779   \n",
       "\n",
       "           Water area[4]         Number of Reps.  \n",
       "       km2           mi2     km2 Number of Reps.  \n",
       "0   131171          1775    4597               7  \n",
       "1  1477953         94743  245384               1  \n",
       "2   294207           396    1026               9  \n",
       "3   134771          1143    2961               4  \n",
       "4   403466          7916   20501              53  "
      ]
     },
     "execution_count": 190,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "usa_states = usa_states[0]\n",
    "usa_states.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Note, in even the last year, the capability of `pd.read_html()` has improved. The merged cells you see in the web table are now handled much more conveniently, with 'Phoenix' now being duplicated so the subsequent columns remain aligned. But check this anyway. If you extract the established date column, you should just get dates. Recall previously you used the `.loc` accessor, because you were using labels. Now you want to refer to a column by its index position and so use `.iloc`. For a discussion on the difference use cases of `.loc` and `.iloc` refer to the [pandas documentation](https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Code task 30#\n",
    "#Use the iloc accessor to get the pandas Series for column number 4 from `usa_states`\n",
    "#It should be a column of dates\n",
    "established = usa_states.iloc[:, 4]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 146,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0     Dec 14, 1819\n",
       "1      Jan 3, 1959\n",
       "2     Feb 14, 1912\n",
       "3     Jun 15, 1836\n",
       "4      Sep 9, 1850\n",
       "5      Aug 1, 1876\n",
       "6      Jan 9, 1788\n",
       "7      Dec 7, 1787\n",
       "8      Mar 3, 1845\n",
       "9      Jan 2, 1788\n",
       "10    Aug 21, 1959\n",
       "11     Jul 3, 1890\n",
       "12     Dec 3, 1818\n",
       "13    Dec 11, 1816\n",
       "14    Dec 28, 1846\n",
       "15    Jan 29, 1861\n",
       "16     Jun 1, 1792\n",
       "17    Apr 30, 1812\n",
       "18    Mar 15, 1820\n",
       "19    Apr 28, 1788\n",
       "20     Feb 6, 1788\n",
       "21    Jan 26, 1837\n",
       "22    May 11, 1858\n",
       "23    Dec 10, 1817\n",
       "24    Aug 10, 1821\n",
       "25     Nov 8, 1889\n",
       "26     Mar 1, 1867\n",
       "27    Oct 31, 1864\n",
       "28    Jun 21, 1788\n",
       "29    Dec 18, 1787\n",
       "30     Jan 6, 1912\n",
       "31    Jul 26, 1788\n",
       "32    Nov 21, 1789\n",
       "33     Nov 2, 1889\n",
       "34     Mar 1, 1803\n",
       "35    Nov 16, 1907\n",
       "36    Feb 14, 1859\n",
       "37    Dec 12, 1787\n",
       "38    May 29, 1790\n",
       "39    May 23, 1788\n",
       "40     Nov 2, 1889\n",
       "41     Jun 1, 1796\n",
       "42    Dec 29, 1845\n",
       "43     Jan 4, 1896\n",
       "44     Mar 4, 1791\n",
       "45    Jun 25, 1788\n",
       "46    Nov 11, 1889\n",
       "47    Jun 20, 1863\n",
       "48    May 29, 1848\n",
       "49    Jul 10, 1890\n",
       "Name: (Established[A], Established[A]), dtype: object"
      ]
     },
     "execution_count": 146,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "established"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Extract the state name, population, and total area (square miles) columns."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 168,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>state</th>\n",
       "      <th>state_population</th>\n",
       "      <th>state_area_sq_miles</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Alabama</td>\n",
       "      <td>4903185</td>\n",
       "      <td>52420</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Alaska</td>\n",
       "      <td>731545</td>\n",
       "      <td>665384</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Arizona</td>\n",
       "      <td>7278717</td>\n",
       "      <td>113990</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Arkansas</td>\n",
       "      <td>3017804</td>\n",
       "      <td>53179</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>California</td>\n",
       "      <td>39512223</td>\n",
       "      <td>163695</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        state  state_population  state_area_sq_miles\n",
       "0     Alabama           4903185                52420\n",
       "1      Alaska            731545               665384\n",
       "2     Arizona           7278717               113990\n",
       "3    Arkansas           3017804                53179\n",
       "4  California          39512223               163695"
      ]
     },
     "execution_count": 168,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Code task 31#\n",
    "#Now use the iloc accessor again to extract columns 0, 5, and 6 and the dataframe's `copy()` method\n",
    "#Set the names of these extracted columns to 'state', 'state_population', and 'state_area_sq_miles',\n",
    "#respectively.\n",
    "usa_states_sub = usa_states.iloc[:, [0,5,6]].copy()\n",
    "usa_states_sub.columns = ['state','state_population','state_area_sq_miles']\n",
    "usa_states_sub.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 197,
   "metadata": {},
   "outputs": [],
   "source": [
    "state_summary.head()\n",
    "state_summery=state_summary.reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 198,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>state</th>\n",
       "      <th>state_population</th>\n",
       "      <th>state_area_sq_miles</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Alabama</td>\n",
       "      <td>4903185</td>\n",
       "      <td>52420</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Alaska</td>\n",
       "      <td>731545</td>\n",
       "      <td>665384</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Arizona</td>\n",
       "      <td>7278717</td>\n",
       "      <td>113990</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Arkansas</td>\n",
       "      <td>3017804</td>\n",
       "      <td>53179</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>California</td>\n",
       "      <td>39512223</td>\n",
       "      <td>163695</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        state  state_population  state_area_sq_miles\n",
       "0     Alabama           4903185                52420\n",
       "1      Alaska            731545               665384\n",
       "2     Arizona           7278717               113990\n",
       "3    Arkansas           3017804                53179\n",
       "4  California          39512223               163695"
      ]
     },
     "execution_count": 198,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "usa_states_sub.head()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Do you have all the ski data states accounted for?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 199,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'Massachusetts', 'Pennsylvania', 'Rhode Island', 'Virginia'}"
      ]
     },
     "execution_count": 199,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Code task 32#\n",
    "#Find the states in `state_summary` that are not in `usa_states_sub`\n",
    "#Hint: set(list1) - set(list2) is an easy way to get items in list1 that are not in list2\n",
    "missing_states = set(state_summary.state) - set(usa_states_sub.state)\n",
    "missing_states"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "No?? "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "If you look at the table on the web, you can perhaps start to guess what the problem is. You can confirm your suspicion by pulling out state names that _contain_ 'Massachusetts', 'Pennsylvania', or 'Virginia' from usa_states_sub:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 164,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "20    Massachusetts[C]\n",
       "37     Pennsylvania[C]\n",
       "38     Rhode Island[D]\n",
       "45         Virginia[C]\n",
       "47       West Virginia\n",
       "Name: state, dtype: object"
      ]
     },
     "execution_count": 164,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "usa_states_sub.state[usa_states_sub.state.str.contains('Massachusetts|Pennsylvania|Rhode Island|Virginia')]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Delete square brackets and their contents and try again:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 165,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "20    Massachusetts\n",
       "37     Pennsylvania\n",
       "38     Rhode Island\n",
       "45         Virginia\n",
       "47    West Virginia\n",
       "Name: state, dtype: object"
      ]
     },
     "execution_count": 165,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Code task 33#\n",
    "#Use pandas' Series' `replace()` method to replace anything within square brackets (including the brackets)\n",
    "#with the empty string. Do this inplace, so you need to specify the arguments:\n",
    "#to_replace='\\[.*\\]' #literal square bracket followed by anything or nothing followed by literal closing bracket\n",
    "#value='' #empty string as replacement\n",
    "#regex=True #we used a regex in our `to_replace` argument\n",
    "#inplace=True #Do this \"in place\"\n",
    "usa_states_sub.state.replace(to_replace='\\[.*\\]', value='', regex=True, inplace=True)\n",
    "usa_states_sub.state[usa_states_sub.state.str.contains('Massachusetts|Pennsylvania|Rhode Island|Virginia')]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 200,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'Massachusetts', 'Pennsylvania', 'Rhode Island', 'Virginia'}"
      ]
     },
     "execution_count": 200,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Code task 34#\n",
    "#And now verify none of our states are missing by checking that there are no states in\n",
    "#state_summary that are not in usa_states_sub (as earlier using `set()`)\n",
    "missing_states = set(state_summary.state) - set(usa_states_sub.state)\n",
    "missing_states"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Better! You have an empty set for missing states now. You can confidently add the population and state area columns to the ski resort data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 172,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>state</th>\n",
       "      <th>resorts_per_state</th>\n",
       "      <th>state_total_skiable_area_ac</th>\n",
       "      <th>state_total_days_open</th>\n",
       "      <th>state_total_terrain_parks</th>\n",
       "      <th>state_total_nightskiing_ac</th>\n",
       "      <th>state_population</th>\n",
       "      <th>state_area_sq_miles</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Alaska</td>\n",
       "      <td>3</td>\n",
       "      <td>2280.0</td>\n",
       "      <td>345.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>580.0</td>\n",
       "      <td>731545.0</td>\n",
       "      <td>665384.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Arizona</td>\n",
       "      <td>2</td>\n",
       "      <td>1577.0</td>\n",
       "      <td>237.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>7278717.0</td>\n",
       "      <td>113990.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>California</td>\n",
       "      <td>20</td>\n",
       "      <td>21148.0</td>\n",
       "      <td>2583.0</td>\n",
       "      <td>78.0</td>\n",
       "      <td>587.0</td>\n",
       "      <td>39512223.0</td>\n",
       "      <td>163695.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Colorado</td>\n",
       "      <td>22</td>\n",
       "      <td>43682.0</td>\n",
       "      <td>3258.0</td>\n",
       "      <td>74.0</td>\n",
       "      <td>428.0</td>\n",
       "      <td>5758736.0</td>\n",
       "      <td>104094.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Connecticut</td>\n",
       "      <td>5</td>\n",
       "      <td>358.0</td>\n",
       "      <td>353.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>256.0</td>\n",
       "      <td>3565278.0</td>\n",
       "      <td>5543.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         state  resorts_per_state  state_total_skiable_area_ac  \\\n",
       "0       Alaska                  3                       2280.0   \n",
       "1      Arizona                  2                       1577.0   \n",
       "2   California                 20                      21148.0   \n",
       "3     Colorado                 22                      43682.0   \n",
       "4  Connecticut                  5                        358.0   \n",
       "\n",
       "   state_total_days_open  state_total_terrain_parks  \\\n",
       "0                  345.0                        4.0   \n",
       "1                  237.0                        6.0   \n",
       "2                 2583.0                       78.0   \n",
       "3                 3258.0                       74.0   \n",
       "4                  353.0                       10.0   \n",
       "\n",
       "   state_total_nightskiing_ac  state_population  state_area_sq_miles  \n",
       "0                       580.0          731545.0             665384.0  \n",
       "1                        80.0         7278717.0             113990.0  \n",
       "2                       587.0        39512223.0             163695.0  \n",
       "3                       428.0         5758736.0             104094.0  \n",
       "4                       256.0         3565278.0               5543.0  "
      ]
     },
     "execution_count": 172,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Code task 35#\n",
    "#Use 'state_summary's `merge()` method to combine our new data in 'usa_states_sub'\n",
    "#specify the arguments how='left' and on='state'\n",
    "state_summary = state_summary.merge(usa_states_sub, how='left', on='state')\n",
    "state_summary.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Having created this data frame of summary statistics for various states, it would seem obvious to join this with the ski resort data to augment it with this additional data. You will do this, but not now. In the next notebook you will be exploring the data, including the relationships between the states. For that you want a separate row for each state, as you have here, and joining the data this soon means you'd need to separate and eliminate redundances in the state data when you wanted it."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.11 Target Feature<a id='2.11_Target_Feature'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Finally, what will your target be when modelling ticket price? What relationship is there between weekday and weekend prices?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 173,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Code task 36#\n",
    "#Use ski_data's `plot()` method to create a scatterplot (kind='scatter') with 'AdultWeekday' on the x-axis and\n",
    "#'AdultWeekend' on the y-axis\n",
    "ski_data.plot(x='AdultWeekday', y='AdultWeekend', kind='scatter');"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "A couple of observations can be made. Firstly, there is a clear line where weekend and weekday prices are equal. Weekend prices being higher than weekday prices seem restricted to sub $100 resorts. Recall from the boxplot earlier that the distribution for weekday and weekend prices in Montana seemed equal. Is this confirmed in the actual data for each resort? Big Mountain resort is in Montana, so the relationship between these quantities in this state are particularly relevant."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 176,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>AdultWeekend</th>\n",
       "      <th>AdultWeekday</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>141</th>\n",
       "      <td>42.0</td>\n",
       "      <td>42.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>142</th>\n",
       "      <td>63.0</td>\n",
       "      <td>63.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>143</th>\n",
       "      <td>49.0</td>\n",
       "      <td>49.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>144</th>\n",
       "      <td>48.0</td>\n",
       "      <td>48.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>145</th>\n",
       "      <td>46.0</td>\n",
       "      <td>46.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>146</th>\n",
       "      <td>39.0</td>\n",
       "      <td>39.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>147</th>\n",
       "      <td>50.0</td>\n",
       "      <td>50.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148</th>\n",
       "      <td>67.0</td>\n",
       "      <td>67.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149</th>\n",
       "      <td>47.0</td>\n",
       "      <td>47.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>150</th>\n",
       "      <td>39.0</td>\n",
       "      <td>39.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>151</th>\n",
       "      <td>81.0</td>\n",
       "      <td>81.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     AdultWeekend  AdultWeekday\n",
       "141          42.0          42.0\n",
       "142          63.0          63.0\n",
       "143          49.0          49.0\n",
       "144          48.0          48.0\n",
       "145          46.0          46.0\n",
       "146          39.0          39.0\n",
       "147          50.0          50.0\n",
       "148          67.0          67.0\n",
       "149          47.0          47.0\n",
       "150          39.0          39.0\n",
       "151          81.0          81.0"
      ]
     },
     "execution_count": 176,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Code task 37#\n",
    "#Use the loc accessor on ski_data to print the 'AdultWeekend' and 'AdultWeekday' columns for Montana only\n",
    "ski_data.loc[ski_data.state == 'Montana', ['AdultWeekend', 'AdultWeekday']]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Is there any reason to prefer weekend or weekday prices? Which is missing the least?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 177,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "AdultWeekend    4\n",
       "AdultWeekday    7\n",
       "dtype: int64"
      ]
     },
     "execution_count": 177,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ski_data[['AdultWeekend', 'AdultWeekday']].isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Weekend prices have the least missing values of the two, so drop the weekday prices and then keep just the rows that have weekend price."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 178,
   "metadata": {},
   "outputs": [],
   "source": [
    "ski_data.drop(columns='AdultWeekday', inplace=True)\n",
    "ski_data.dropna(subset=['AdultWeekend'], inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 179,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(277, 25)"
      ]
     },
     "execution_count": 179,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ski_data.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Perform a final quick check on the data."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2.11.1 Number Of Missing Values By Row - Resort<a id='2.11.1_Number_Of_Missing_Values_By_Row_-_Resort'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Having dropped rows missing the desired target ticket price, what degree of missingness do you have for the remaining rows?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 180,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>%</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>329</th>\n",
       "      <td>5</td>\n",
       "      <td>20.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62</th>\n",
       "      <td>5</td>\n",
       "      <td>20.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>141</th>\n",
       "      <td>5</td>\n",
       "      <td>20.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86</th>\n",
       "      <td>5</td>\n",
       "      <td>20.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>74</th>\n",
       "      <td>5</td>\n",
       "      <td>20.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>146</th>\n",
       "      <td>5</td>\n",
       "      <td>20.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>184</th>\n",
       "      <td>4</td>\n",
       "      <td>16.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>108</th>\n",
       "      <td>4</td>\n",
       "      <td>16.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>198</th>\n",
       "      <td>4</td>\n",
       "      <td>16.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>4</td>\n",
       "      <td>16.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     count     %\n",
       "329      5  20.0\n",
       "62       5  20.0\n",
       "141      5  20.0\n",
       "86       5  20.0\n",
       "74       5  20.0\n",
       "146      5  20.0\n",
       "184      4  16.0\n",
       "108      4  16.0\n",
       "198      4  16.0\n",
       "39       4  16.0"
      ]
     },
     "execution_count": 180,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "missing = pd.concat([ski_data.isnull().sum(axis=1), 100 * ski_data.isnull().mean(axis=1)], axis=1)\n",
    "missing.columns=['count', '%']\n",
    "missing.sort_values(by='count', ascending=False).head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "These seem possibly curiously quantized..."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 181,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 0.,  4.,  8., 12., 16., 20.])"
      ]
     },
     "execution_count": 181,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "missing['%'].unique()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Yes, the percentage of missing values per row appear in multiples of 4."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 182,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.0     107\n",
       "4.0      94\n",
       "8.0      45\n",
       "12.0     15\n",
       "16.0     10\n",
       "20.0      6\n",
       "Name: %, dtype: int64"
      ]
     },
     "execution_count": 182,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "missing['%'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This is almost as if values have been removed artificially... Nevertheless, what you don't know is how useful the missing features are in predicting ticket price. You shouldn't just drop rows that are missing several useless features."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 183,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 277 entries, 0 to 329\n",
      "Data columns (total 25 columns):\n",
      " #   Column             Non-Null Count  Dtype  \n",
      "---  ------             --------------  -----  \n",
      " 0   Name               277 non-null    object \n",
      " 1   Region             277 non-null    object \n",
      " 2   state              277 non-null    object \n",
      " 3   summit_elev        277 non-null    int64  \n",
      " 4   vertical_drop      277 non-null    int64  \n",
      " 5   base_elev          277 non-null    int64  \n",
      " 6   trams              277 non-null    int64  \n",
      " 7   fastSixes          277 non-null    int64  \n",
      " 8   fastQuads          277 non-null    int64  \n",
      " 9   quad               277 non-null    int64  \n",
      " 10  triple             277 non-null    int64  \n",
      " 11  double             277 non-null    int64  \n",
      " 12  surface            277 non-null    int64  \n",
      " 13  total_chairs       277 non-null    int64  \n",
      " 14  Runs               274 non-null    float64\n",
      " 15  TerrainParks       233 non-null    float64\n",
      " 16  LongestRun_mi      272 non-null    float64\n",
      " 17  SkiableTerrain_ac  275 non-null    float64\n",
      " 18  Snow Making_ac     240 non-null    float64\n",
      " 19  daysOpenLastYear   233 non-null    float64\n",
      " 20  yearsOpen          277 non-null    float64\n",
      " 21  averageSnowfall    268 non-null    float64\n",
      " 22  AdultWeekend       277 non-null    float64\n",
      " 23  projectedDaysOpen  236 non-null    float64\n",
      " 24  NightSkiing_ac     163 non-null    float64\n",
      "dtypes: float64(11), int64(11), object(3)\n",
      "memory usage: 56.3+ KB\n"
     ]
    }
   ],
   "source": [
    "ski_data.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "There are still some missing values, and it's good to be aware of this, but leave them as is for now."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.12 Save data<a id='2.12_Save_data'></a>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 184,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(277, 25)"
      ]
     },
     "execution_count": 184,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ski_data.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Save this to your data directory, separately. Note that you were provided with the data in `raw_data` and you should saving derived data in a separate location. This guards against overwriting our original data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [],
   "source": [
    "# save the data to a new csv file\n",
    "datapath = '../data'\n",
    "save_file(ski_data, 'ski_data_cleaned.csv', datapath)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [],
   "source": [
    "# save the state_summary separately.\n",
    "datapath = '../data'\n",
    "save_file(state_summary, 'state_summary.csv', datapath)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.13 Summary<a id='2.13_Summary'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Q: 3** Write a summary statement that highlights the key processes and findings from this notebook. This should include information such as the original number of rows in the data, whether our own resort was actually present etc. What columns, if any, have been removed? Any rows? Summarise the reasons why. Were any other issues found? What remedial actions did you take? State where you are in the project. Can you confirm what the target feature is for your desire to predict ticket price? How many rows were left in the data? Hint: this is a great opportunity to reread your notebook, check all cells have been executed in order and from a \"blank slate\" (restarting the kernel will do this), and that your workflow makes sense and follows a logical pattern. As you do this you can pull out salient information for inclusion in this summary. Thus, this section will provide an important overview of \"what\" and \"why\" without having to dive into the \"how\" or any unproductive or inconclusive steps along the way."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**A: 3** Your answer here"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#original number of rows: RangeIndex: 330 entries, 0 to 329, 27 columns\n",
    "#  'Name,' 'Region,' 'state,' and 'summit_elev' were removed as they didn't contribute to the analysis\n",
    "# outliners data in kiableTerrain_ac were dropped as it skewed the graph \n",
    "# fast eight has lots of missing value and it was dropped.\n",
    "# Rows with missing 'AdultWeekday' and 'AdultWeekend' prices were dropped "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# We are currently in the data cleaning phase of the project."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.3"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": true
  },
  "varInspector": {
   "cols": {
    "lenName": 16,
    "lenType": 16,
    "lenVar": 40
   },
   "kernels_config": {
    "python": {
     "delete_cmd_postfix": "",
     "delete_cmd_prefix": "del ",
     "library": "var_list.py",
     "varRefreshCmd": "print(var_dic_list())"
    },
    "r": {
     "delete_cmd_postfix": ") ",
     "delete_cmd_prefix": "rm(",
     "library": "var_list.r",
     "varRefreshCmd": "cat(var_dic_list()) "
    }
   },
   "types_to_exclude": [
    "module",
    "function",
    "builtin_function_or_method",
    "instance",
    "_Feature"
   ],
   "window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
